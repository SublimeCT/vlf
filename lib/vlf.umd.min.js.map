{"version":3,"sources":["webpack://vlf/webpack/universalModuleDefinition","webpack://vlf/webpack/bootstrap","webpack://vlf/./node_modules/@soda/get-current-script/index.js","webpack://vlf/./node_modules/localforage/dist/localforage.js","webpack://vlf/(webpack)/buildin/global.js","webpack://vlf/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://vlf/./src/main.ts","webpack://vlf/./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getCurrentScript","document","currentScript","Error","err","pageSource","inlineScriptSourceRegExp","inlineScriptSource","ieStackRegExp","ffStackRegExp","stackDetails","exec","stack","scriptLocation","line","currentLocation","location","href","replace","hash","scripts","getElementsByTagName","documentElement","outerHTML","RegExp","trim","length","readyState","src","innerHTML","f","e","u","a","require","code","1","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","len","immediate","task","push","window","2","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","returnValue","reject","resolve","getThen","obj","then","apply","arguments","thenable","onError","onSuccess","tryToUnwrap","result","tryCatch","status","out","reason","all","iterable","toString","values","Array","resolved","allResolver","resolveFromAll","outValue","error","race","response","constructor","3","4","_typeof","iterator","_classCallCheck","instance","Constructor","getIDB","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","idb","isIndexedDBValid","isSafari","openDatabase","test","navigator","userAgent","platform","hasFetch","fetch","indexOf","IDBKeyRange","createBlob","parts","properties","Blob","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","append","getBlob","type","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","console","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_checkBlobSupportWithoutCaching","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","match","matchedEdge","parseInt","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","_getConnection","upgradeNeeded","createDbContext","db","close","dbArgs","version","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","base64","btoa","target","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","arrayBuff","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_tryReconnect","forages","forage","createTransaction","retries","undefined","tx","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","getItem","store","req","iterate","openCursor","iterationNumber","cursor","setItem","blobSupport","removeItem","clear","count","advanced","advance","keys","dropInstance","currentConfig","config","isCurrentDb","dbPromise","dropObjectPromise","deleteObjectStore","_forage2","dropDBPromise","deleteDatabase","onblocked","_forage","asyncStorage","_driver","_support","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","buffer","bytes","bufferToString","base64String","substring","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","localforageSerializer","createDbTable","executeSql","_initStorage$1","dbInfoPromise","description","size","serializer","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","getItem$1","item","iterate$1","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","setItem$1","removeItem$1","clear$1","length$1","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","operations","webSQLStorage","isLocalStorageValid","localStorage","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","x","y","isNaN","includes","array","searchElement","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","LocalForage","driverTypeKey","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","driverObject","complianceError","driverMethods","driverMethodName","isRequired","configureMissingMethods","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance","localforage_js","g","Function","vlf","install","vue","$vlf"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,kBAAZC,SAA0C,kBAAXC,OACxCA,OAAOD,QAAUD,IACQ,oBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,kBAAZC,QACdA,QAAQ,OAASD,IAEjBD,EAAK,OAASC,KARhB,CASoB,qBAATK,KAAuBA,KAAOC,MAAO,WAChD,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUR,QAGnC,IAAIC,EAASK,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHV,QAAS,IAUV,OANAW,EAAQH,GAAUI,KAAKX,EAAOD,QAASC,EAAQA,EAAOD,QAASO,GAG/DN,EAAOS,GAAI,EAGJT,EAAOD,QA0Df,OArDAO,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASf,EAASgB,EAAMC,GAC3CV,EAAoBW,EAAElB,EAASgB,IAClCG,OAAOC,eAAepB,EAASgB,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAASvB,GACX,qBAAXwB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAepB,EAASwB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAepB,EAAS,aAAc,CAAE0B,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAASjC,GAChC,IAAIgB,EAAShB,GAAUA,EAAO4B,WAC7B,WAAwB,OAAO5B,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAM,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,Q,uBClFrD,WAMC,SAAU1C,EAAMC,GAEb,EAAO,GAAI,EAAF,EAAS,kEAFtB,CAQkB,qBAATK,MAAuBA,MAAa,WAC3C,SAASqC,IACP,GAAIC,SAASC,cACX,OAAOD,SAASC,cAKlB,IACE,MAAM,IAAIC,MAEZ,MAAOC,GAEL,IAMEC,EACAC,EACAC,EAREC,EAAgB,kCAClBC,EAAgB,6BAChBC,EAAeF,EAAcG,KAAKP,EAAIQ,QAAUH,EAAcE,KAAKP,EAAIQ,OACvEC,EAAkBH,GAAgBA,EAAa,KAAO,EACtDI,EAAQJ,GAAgBA,EAAa,KAAO,EAC5CK,EAAkBd,SAASe,SAASC,KAAKC,QAAQjB,SAASe,SAASG,KAAM,IAIzEC,EAAUnB,SAASoB,qBAAqB,UAEtCR,IAAmBE,IACrBV,EAAaJ,SAASqB,gBAAgBC,UACtCjB,EAA2B,IAAIkB,OAAO,sBAAwBV,EAAO,GAAK,iDAAkD,KAC5HP,EAAqBF,EAAWa,QAAQZ,EAA0B,MAAMmB,QAG1E,IAAK,IAAIzD,EAAI,EAAGA,EAAIoD,EAAQM,OAAQ1D,IAAK,CAEvC,GAA8B,gBAA1BoD,EAAQpD,GAAG2D,WACb,OAAOP,EAAQpD,GAIjB,GAAIoD,EAAQpD,GAAG4D,MAAQf,EACrB,OAAOO,EAAQpD,GAIjB,GACE6C,IAAmBE,GACnBK,EAAQpD,GAAG6D,WACXT,EAAQpD,GAAG6D,UAAUJ,SAAWlB,EAEhC,OAAOa,EAAQpD,GAKnB,OAAO,MAIX,OAAOgC,M,sBCtET;;;;;;;CAMA,SAAU8B,GAA8DtE,EAAOD,QAAQuE,KAAvF,EAAuU,WAAqC,OAAO,SAAUC,EAAE7C,EAAEO,EAAEX,GAAG,SAASiB,EAAEtB,EAAEuD,GAAG,IAAIvC,EAAEhB,GAAG,CAAC,IAAIS,EAAET,GAAG,CAAC,IAAIwD,EAAkB,mBAATC,GAAqBA,EAAQ,IAAIF,GAAGC,EAAE,OAAO,EAAExD,GAAE,GAAI,GAAGT,EAAE,OAAOA,EAAES,GAAE,GAAI,IAAIqD,EAAE,IAAI3B,MAAM,uBAAuB1B,EAAE,KAAK,MAAOqD,EAAEK,KAAK,mBAAoBL,EAAG,IAAI7D,EAAEwB,EAAEhB,GAAG,CAAClB,QAAQ,IAAI2B,EAAET,GAAG,GAAGN,KAAKF,EAAEV,SAAQ,SAASwE,GAAG,IAAItC,EAAEP,EAAET,GAAG,GAAGsD,GAAG,OAAOhC,EAAEN,GAAIsC,KAAI9D,EAAEA,EAAEV,QAAQwE,EAAE7C,EAAEO,EAAEX,GAAG,OAAOW,EAAEhB,GAAGlB,QAAkD,IAA1C,IAAIS,EAAkB,mBAATkE,GAAqBA,EAAgBzD,EAAE,EAAEA,EAAEK,EAAE4C,OAAOjD,IAAIsB,EAAEjB,EAAEL,IAAI,OAAOsB,EAA1b,CAA8b,CAACqC,EAAE,CAAC,SAASC,EAAQ7E,EAAOD,IAC70B,SAAW+E,GACX,aACA,IAEIC,EAyCAC,EA3CAC,EAAWH,EAAOI,kBAAoBJ,EAAOK,uBAK/C,GAAIF,EAAU,CACZ,IAAIG,EAAS,EACTC,EAAW,IAAIJ,EAASK,GACxBC,EAAUT,EAAOrC,SAAS+C,eAAe,IAC7CH,EAASI,QAAQF,EAAS,CACxBG,eAAe,IAEjBX,EAAgB,WACdQ,EAAQI,KAAQP,IAAWA,EAAS,QAEjC,GAAKN,EAAOc,cAAiD,qBAA1Bd,EAAOe,eAO/Cd,EADS,aAAcD,GAAU,uBAAwBA,EAAOrC,SAASqD,cAAc,UACvE,WAId,IAAIC,EAAWjB,EAAOrC,SAASqD,cAAc,UAC7CC,EAASC,mBAAqB,WAC5BV,IAEAS,EAASC,mBAAqB,KAC9BD,EAASE,WAAWC,YAAYH,GAChCA,EAAW,MAEbjB,EAAOrC,SAASqB,gBAAgBqC,YAAYJ,IAG9B,WACdK,WAAWd,EAAU,QAvBwD,CAC/E,IAAIe,EAAU,IAAIvB,EAAOe,eACzBQ,EAAQC,MAAMC,UAAYjB,EAC1BP,EAAgB,WACdsB,EAAQG,MAAMC,YAAY,IAyBhC,IAAIC,EAAQ,GAEZ,SAASpB,IAEP,IAAI9E,EAAGmG,EADP3B,GAAW,EAEX,IAAI4B,EAAMF,EAAMxC,OAChB,MAAO0C,EAAK,CACVD,EAAWD,EACXA,EAAQ,GACRlG,GAAK,EACL,QAASA,EAAIoG,EACXD,EAASnG,KAEXoG,EAAMF,EAAMxC,OAEdc,GAAW,EAIb,SAAS6B,EAAUC,GACQ,IAArBJ,EAAMK,KAAKD,IAAgB9B,GAC7BD,IAHJ/E,EAAOD,QAAU8G,IAOdlG,KAAKP,KAAuB,qBAAX0E,EAAyBA,EAAyB,qBAAT3E,KAAuBA,KAAyB,qBAAX6G,OAAyBA,OAAS,KAClI,IAAIC,EAAE,CAAC,SAASpC,EAAQ7E,EAAOD,GACjC,aACA,IAAI8G,EAAYhC,EAAQ,GAGxB,SAASqC,KAET,IAAIC,EAAW,GAEXC,EAAW,CAAC,YACZC,EAAY,CAAC,aACbC,EAAU,CAAC,WAIf,SAASC,EAAQC,GACf,GAAwB,oBAAbA,EACT,MAAM,IAAIC,UAAU,+BAEtBrH,KAAKsH,MAAQJ,EACblH,KAAKsG,MAAQ,GACbtG,KAAKuH,aAAU,EACXH,IAAaN,GACfU,EAAsBxH,KAAMoH,GAsBhC,SAASK,EAAUC,EAASC,EAAaC,GACvC5H,KAAK0H,QAAUA,EACY,oBAAhBC,IACT3H,KAAK2H,YAAcA,EACnB3H,KAAK6H,cAAgB7H,KAAK8H,oBAEF,oBAAfF,IACT5H,KAAK4H,WAAaA,EAClB5H,KAAK+H,aAAe/H,KAAKgI,mBAgB7B,SAASC,EAAOP,EAASQ,EAAM7G,GAC7BoF,GAAU,WACR,IAAI0B,EACJ,IACEA,EAAcD,EAAK7G,GACnB,MAAO8C,GACP,OAAO4C,EAASqB,OAAOV,EAASvD,GAE9BgE,IAAgBT,EAClBX,EAASqB,OAAOV,EAAS,IAAIL,UAAU,uCAEvCN,EAASsB,QAAQX,EAASS,MAoChC,SAASG,EAAQC,GAEf,IAAIC,EAAOD,GAAOA,EAAIC,KACtB,GAAID,IAAuB,kBAARA,GAAmC,oBAARA,IAAuC,oBAATC,EAC1E,OAAO,WACLA,EAAKC,MAAMF,EAAKG,YAKtB,SAASlB,EAAsBzH,EAAM4I,GAEnC,IAAI3D,GAAS,EACb,SAAS4D,EAAQvH,GACX2D,IAGJA,GAAS,EACT+B,EAASqB,OAAOrI,EAAMsB,IAGxB,SAASwH,EAAUxH,GACb2D,IAGJA,GAAS,EACT+B,EAASsB,QAAQtI,EAAMsB,IAGzB,SAASyH,IACPH,EAASE,EAAWD,GAGtB,IAAIG,EAASC,EAASF,GACA,UAAlBC,EAAOE,QACTL,EAAQG,EAAO1H,OAInB,SAAS2H,EAASd,EAAM7G,GACtB,IAAI6H,EAAM,GACV,IACEA,EAAI7H,MAAQ6G,EAAK7G,GACjB6H,EAAID,OAAS,UACb,MAAO9E,GACP+E,EAAID,OAAS,QACbC,EAAI7H,MAAQ8C,EAEd,OAAO+E,EAIT,SAASb,EAAQhH,GACf,OAAIA,aAAiBrB,KACZqB,EAEF0F,EAASsB,QAAQ,IAAIrI,KAAK8G,GAAWzF,GAI9C,SAAS+G,EAAOe,GACd,IAAIzB,EAAU,IAAI1H,KAAK8G,GACvB,OAAOC,EAASqB,OAAOV,EAASyB,GAIlC,SAASC,EAAIC,GACX,IAAItJ,EAAOC,KACX,GAAiD,mBAA7Cc,OAAOkB,UAAUsH,SAAS/I,KAAK8I,GACjC,OAAOrJ,KAAKoI,OAAO,IAAIf,UAAU,qBAGnC,IAAIb,EAAM6C,EAASvF,OACfkB,GAAS,EACb,IAAKwB,EACH,OAAOxG,KAAKqI,QAAQ,IAGtB,IAAIkB,EAAS,IAAIC,MAAMhD,GACnBiD,EAAW,EACXrJ,GAAK,EACLsH,EAAU,IAAI1H,KAAK8G,GAEvB,QAAS1G,EAAIoG,EACXkD,EAAYL,EAASjJ,GAAIA,GAE3B,OAAOsH,EACP,SAASgC,EAAYrI,EAAOjB,GAO1B,SAASuJ,EAAeC,GACtBL,EAAOnJ,GAAKwJ,IACNH,IAAajD,GAAQxB,IACzBA,GAAS,EACT+B,EAASsB,QAAQX,EAAS6B,IAV9BxJ,EAAKsI,QAAQhH,GAAOmH,KAAKmB,GAAgB,SAAUE,GAC5C7E,IACHA,GAAS,EACT+B,EAASqB,OAAOV,EAASmC,QAcjC,SAASC,EAAKT,GACZ,IAAItJ,EAAOC,KACX,GAAiD,mBAA7Cc,OAAOkB,UAAUsH,SAAS/I,KAAK8I,GACjC,OAAOrJ,KAAKoI,OAAO,IAAIf,UAAU,qBAGnC,IAAIb,EAAM6C,EAASvF,OACfkB,GAAS,EACb,IAAKwB,EACH,OAAOxG,KAAKqI,QAAQ,IAGtB,IAAIjI,GAAK,EACLsH,EAAU,IAAI1H,KAAK8G,GAEvB,QAAS1G,EAAIoG,EACXY,EAASiC,EAASjJ,IAEpB,OAAOsH,EACP,SAASN,EAAS/F,GAChBtB,EAAKsI,QAAQhH,GAAOmH,MAAK,SAAUuB,GAC5B/E,IACHA,GAAS,EACT+B,EAASsB,QAAQX,EAASqC,OAE3B,SAAUF,GACN7E,IACHA,GAAS,EACT+B,EAASqB,OAAOV,EAASmC,QA5OjCjK,EAAOD,QAAUwH,EAcjBA,EAAQnF,UAAU,SAAW,SAAU4F,GACrC,OAAO5H,KAAKwI,KAAK,KAAMZ,IAEzBT,EAAQnF,UAAUwG,KAAO,SAAUb,EAAaC,GAC9C,GAA2B,oBAAhBD,GAA8B3H,KAAKsH,QAAUL,GAChC,oBAAfW,GAA6B5H,KAAKsH,QAAUN,EACnD,OAAOhH,KAET,IAAI0H,EAAU,IAAI1H,KAAKgK,YAAYlD,GACnC,GAAI9G,KAAKsH,QAAUJ,EAAS,CAC1B,IAAIE,EAAWpH,KAAKsH,QAAUL,EAAYU,EAAcC,EACxDK,EAAOP,EAASN,EAAUpH,KAAKuH,cAE/BvH,KAAKsG,MAAMK,KAAK,IAAIc,EAAUC,EAASC,EAAaC,IAGtD,OAAOF,GAaTD,EAAUzF,UAAU6F,cAAgB,SAAUxG,GAC5C0F,EAASsB,QAAQrI,KAAK0H,QAASrG,IAEjCoG,EAAUzF,UAAU8F,mBAAqB,SAAUzG,GACjD4G,EAAOjI,KAAK0H,QAAS1H,KAAK2H,YAAatG,IAEzCoG,EAAUzF,UAAU+F,aAAe,SAAU1G,GAC3C0F,EAASqB,OAAOpI,KAAK0H,QAASrG,IAEhCoG,EAAUzF,UAAUgG,kBAAoB,SAAU3G,GAChD4G,EAAOjI,KAAK0H,QAAS1H,KAAK4H,WAAYvG,IAmBxC0F,EAASsB,QAAU,SAAUtI,EAAMsB,GACjC,IAAI0H,EAASC,EAASV,EAASjH,GAC/B,GAAsB,UAAlB0H,EAAOE,OACT,OAAOlC,EAASqB,OAAOrI,EAAMgJ,EAAO1H,OAEtC,IAAIsH,EAAWI,EAAO1H,MAEtB,GAAIsH,EACFnB,EAAsBzH,EAAM4I,OACvB,CACL5I,EAAKuH,MAAQL,EACblH,EAAKwH,QAAUlG,EACf,IAAIjB,GAAK,EACLoG,EAAMzG,EAAKuG,MAAMxC,OACrB,QAAS1D,EAAIoG,EACXzG,EAAKuG,MAAMlG,GAAGyH,cAAcxG,GAGhC,OAAOtB,GAETgH,EAASqB,OAAS,SAAUrI,EAAM8J,GAChC9J,EAAKuH,MAAQN,EACbjH,EAAKwH,QAAUsC,EACf,IAAIzJ,GAAK,EACLoG,EAAMzG,EAAKuG,MAAMxC,OACrB,QAAS1D,EAAIoG,EACXzG,EAAKuG,MAAMlG,GAAG2H,aAAa8B,GAE7B,OAAO9J,GAsDToH,EAAQkB,QAAUA,EAQlBlB,EAAQiB,OAASA,EAMjBjB,EAAQiC,IAAMA,EAuCdjC,EAAQ2C,KAAOA,GAmCb,CAAC,EAAI,IAAIG,EAAE,CAAC,SAASxF,EAAQ7E,EAAOD,IACtC,SAAW+E,GACX,aAC8B,oBAAnBA,EAAOyC,UAChBzC,EAAOyC,QAAU1C,EAAQ,MAGxBlE,KAAKP,KAAuB,qBAAX0E,EAAyBA,EAAyB,qBAAT3E,KAAuBA,KAAyB,qBAAX6G,OAAyBA,OAAS,KAClI,CAAC,EAAI,IAAIsD,EAAE,CAAC,SAASzF,EAAQ7E,EAAOD,GACtC,aAEA,IAAIwK,EAA4B,oBAAXhJ,QAAoD,kBAApBA,OAAOiJ,SAAwB,SAAU7B,GAAO,cAAcA,GAAS,SAAUA,GAAO,OAAOA,GAAyB,oBAAXpH,QAAyBoH,EAAIyB,cAAgB7I,QAAUoH,IAAQpH,OAAOa,UAAY,gBAAkBuG,GAEtQ,SAAS8B,EAAgBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIlD,UAAU,qCAEhH,SAASmD,IAEL,IACI,GAAyB,qBAAdC,UACP,OAAOA,UAEX,GAA+B,qBAApBC,gBACP,OAAOA,gBAEX,GAA4B,qBAAjBC,aACP,OAAOA,aAEX,GAA0B,qBAAfC,WACP,OAAOA,WAEX,GAA2B,qBAAhBC,YACP,OAAOA,YAEb,MAAO1G,GACL,QAIR,IAAI2G,EAAMN,IAEV,SAASO,IACL,IAGI,IAAKD,EACD,OAAO,EAMX,IAAIE,EAAmC,qBAAjBC,cAAgC,4BAA4BC,KAAKC,UAAUC,aAAe,SAASF,KAAKC,UAAUC,aAAe,aAAaF,KAAKC,UAAUE,UAE/KC,EAA4B,oBAAVC,QAAsE,IAA9CA,MAAMjC,WAAWkC,QAAQ,gBAIvE,QAASR,GAAYM,IAAkC,qBAAdb,WAKlB,qBAAhBgB,YACT,MAAOtH,GACL,OAAO,GAUf,SAASuH,EAAWC,EAAOC,GAEvBD,EAAQA,GAAS,GACjBC,EAAaA,GAAc,GAC3B,IACI,OAAO,IAAIC,KAAKF,EAAOC,GACzB,MAAOzH,GACL,GAAe,cAAXA,EAAExD,KACF,MAAMwD,EAIV,IAFA,IAAI2H,EAAiC,qBAAhBC,YAA8BA,YAAuC,qBAAlBC,cAAgCA,cAA0C,qBAAnBC,eAAiCA,eAAiBC,kBAC7KC,EAAU,IAAIL,EACT1L,EAAI,EAAGA,EAAIuL,EAAM7H,OAAQ1D,GAAK,EACnC+L,EAAQC,OAAOT,EAAMvL,IAEzB,OAAO+L,EAAQE,QAAQT,EAAWU,OAMnB,qBAAZnF,SAGP1C,EAAQ,GAEZ,IAAI8H,EAAYpF,QAEhB,SAASqF,EAAgB9E,EAAS+E,GAC1BA,GACA/E,EAAQc,MAAK,SAAUO,GACnB0D,EAAS,KAAM1D,MAChB,SAAUc,GACT4C,EAAS5C,MAKrB,SAAS6C,EAAoBhF,EAAS+E,EAAUE,GACpB,oBAAbF,GACP/E,EAAQc,KAAKiE,GAGY,oBAAlBE,GACPjF,EAAQ,SAASiF,GAIzB,SAASC,EAAajL,GAOlB,MALmB,kBAARA,IACPkL,QAAQC,KAAKnL,EAAM,2CACnBA,EAAMoL,OAAOpL,IAGVA,EAGX,SAASqL,IACL,GAAItE,UAAU5E,QAAqD,oBAApC4E,UAAUA,UAAU5E,OAAS,GACxD,OAAO4E,UAAUA,UAAU5E,OAAS,GAO5C,IAAImJ,EAA4B,mCAC5BC,OAAgB,EAChBC,EAAa,GACb7D,EAAWxI,OAAOkB,UAAUsH,SAG5B8D,EAAY,WACZC,EAAa,YAOjB,SAASC,EAAwBC,GAI7B,IAHA,IAAIzJ,EAASyJ,EAAIzJ,OACb0J,EAAM,IAAIC,YAAY3J,GACtB4J,EAAM,IAAIC,WAAWH,GAChBpN,EAAI,EAAGA,EAAI0D,EAAQ1D,IACxBsN,EAAItN,GAAKmN,EAAIK,WAAWxN,GAE5B,OAAOoN,EAkBX,SAASK,EAAgC/C,GACrC,OAAO,IAAIyB,GAAU,SAAUlE,GAC3B,IAAIyF,EAAMhD,EAAIiD,YAAYd,EAA2BI,GACjDW,EAAOtC,EAAW,CAAC,KACvBoC,EAAIG,YAAYhB,GAA2BiB,IAAIF,EAAM,OAErDF,EAAIK,QAAU,SAAUhK,GAGpBA,EAAEiK,iBACFjK,EAAEkK,kBACFhG,GAAQ,IAGZyF,EAAIQ,WAAa,WACb,IAAIC,EAAgBpD,UAAUC,UAAUoD,MAAM,iBAC1CC,EAActD,UAAUC,UAAUoD,MAAM,UAG5CnG,EAAQoG,IAAgBF,GAAiBG,SAASH,EAAc,GAAI,KAAO,QAEhF,UAAS,WACR,OAAO,KAIf,SAASI,EAAkB7D,GACvB,MAA6B,mBAAlBoC,EACAX,EAAUlE,QAAQ6E,GAEtBW,EAAgC/C,GAAKtC,MAAK,SAAUnH,GAEvD,OADA6L,EAAgB7L,EACT6L,KAIf,SAAS0B,EAAgBC,GACrB,IAAIC,EAAY3B,EAAW0B,EAAOlO,MAG9BoO,EAAoB,GAExBA,EAAkBrH,QAAU,IAAI6E,GAAU,SAAUlE,EAASD,GACzD2G,EAAkB1G,QAAUA,EAC5B0G,EAAkB3G,OAASA,KAI/B0G,EAAUE,mBAAmBrI,KAAKoI,GAG7BD,EAAUG,QAGXH,EAAUG,QAAUH,EAAUG,QAAQzG,MAAK,WACvC,OAAOuG,EAAkBrH,WAH7BoH,EAAUG,QAAUF,EAAkBrH,QAQ9C,SAASwH,EAAkBL,GACvB,IAAIC,EAAY3B,EAAW0B,EAAOlO,MAG9BoO,EAAoBD,EAAUE,mBAAmBG,MAIrD,GAAIJ,EAEA,OADAA,EAAkB1G,UACX0G,EAAkBrH,QAIjC,SAAS0H,EAAiBP,EAAQrM,GAC9B,IAAIsM,EAAY3B,EAAW0B,EAAOlO,MAG9BoO,EAAoBD,EAAUE,mBAAmBG,MAIrD,GAAIJ,EAEA,OADAA,EAAkB3G,OAAO5F,GAClBuM,EAAkBrH,QAIjC,SAAS2H,EAAeR,EAAQS,GAC5B,OAAO,IAAI/C,GAAU,SAAUlE,EAASD,GAGpC,GAFA+E,EAAW0B,EAAOlO,MAAQwM,EAAW0B,EAAOlO,OAAS4O,IAEjDV,EAAOW,GAAI,CACX,IAAIF,EAIA,OAAOjH,EAAQwG,EAAOW,IAHtBZ,EAAgBC,GAChBA,EAAOW,GAAGC,QAMlB,IAAIC,EAAS,CAACb,EAAOlO,MAEjB2O,GACAI,EAAO/I,KAAKkI,EAAOc,SAGvB,IAAIC,EAAU9E,EAAI+E,KAAKpH,MAAMqC,EAAK4E,GAE9BJ,IACAM,EAAQE,gBAAkB,SAAU3L,GAChC,IAAIqL,EAAKI,EAAQ7G,OACjB,IACIyG,EAAGO,kBAAkBlB,EAAOmB,WACxB7L,EAAE8L,YAAc,GAEhBT,EAAGO,kBAAkB9C,GAE3B,MAAOiD,GACL,GAAgB,oBAAZA,EAAGvP,KAGH,MAAMuP,EAFNrD,QAAQC,KAAK,iBAAmB+B,EAAOlO,KAA1B,oCAA4EwD,EAAE8L,WAAa,eAAiB9L,EAAEgM,WAAa,sBAAwBtB,EAAOmB,UAAY,wBAQnMJ,EAAQQ,QAAU,SAAUjM,GACxBA,EAAEiK,iBACFhG,EAAOwH,EAAQ/F,QAGnB+F,EAAQS,UAAY,WAChBhI,EAAQuH,EAAQ7G,QAChBmG,EAAkBL,OAK9B,SAASyB,EAAuBzB,GAC5B,OAAOQ,EAAeR,GAAQ,GAGlC,SAAS0B,EAAuB1B,GAC5B,OAAOQ,EAAeR,GAAQ,GAGlC,SAAS2B,EAAiB3B,EAAQ4B,GAC9B,IAAK5B,EAAOW,GACR,OAAO,EAGX,IAAIkB,GAAc7B,EAAOW,GAAGmB,iBAAiBC,SAAS/B,EAAOmB,WACzDa,EAAchC,EAAOc,QAAUd,EAAOW,GAAGG,QACzCmB,EAAYjC,EAAOc,QAAUd,EAAOW,GAAGG,QAY3C,GAVIkB,IAGIhC,EAAOc,UAAYc,GACnB5D,QAAQC,KAAK,iBAAmB+B,EAAOlO,KAA1B,uCAA8EkO,EAAOW,GAAGG,QAAU,eAAiBd,EAAOc,QAAU,KAGrJd,EAAOc,QAAUd,EAAOW,GAAGG,SAG3BmB,GAAaJ,EAAY,CAIzB,GAAIA,EAAY,CACZ,IAAIK,EAAalC,EAAOW,GAAGG,QAAU,EACjCoB,EAAalC,EAAOc,UACpBd,EAAOc,QAAUoB,GAIzB,OAAO,EAGX,OAAO,EAIX,SAASC,EAAYhD,GACjB,OAAO,IAAIzB,GAAU,SAAUlE,EAASD,GACpC,IAAI6I,EAAS,IAAIC,WACjBD,EAAOb,QAAUhI,EACjB6I,EAAOE,UAAY,SAAUhN,GACzB,IAAIiN,EAASC,KAAKlN,EAAEmN,OAAOvI,QAAU,IACrCV,EAAQ,CACJkJ,6BAA6B,EAC7BhM,KAAM6L,EACN9E,KAAM0B,EAAK1B,QAGnB2E,EAAOO,mBAAmBxD,MAKlC,SAASyD,EAAYC,GACjB,IAAIC,EAAYrE,EAAwBsE,KAAKF,EAAYnM,OACzD,OAAOmG,EAAW,CAACiG,GAAY,CAAErF,KAAMoF,EAAYpF,OAIvD,SAASuF,EAAexQ,GACpB,OAAOA,GAASA,EAAMkQ,4BAO1B,SAASO,EAAYrF,GACjB,IAAI1M,EAAOC,KAEP0H,EAAU3H,EAAKgS,aAAavJ,MAAK,WACjC,IAAIsG,EAAY3B,EAAWpN,EAAKiS,QAAQrR,MAExC,GAAImO,GAAaA,EAAUG,QACvB,OAAOH,EAAUG,WAKzB,OADAvC,EAAoBhF,EAAS+E,EAAUA,GAChC/E,EAMX,SAASuK,EAAcpD,GACnBD,EAAgBC,GAKhB,IAHA,IAAIC,EAAY3B,EAAW0B,EAAOlO,MAC9BuR,EAAUpD,EAAUoD,QAEf9R,EAAI,EAAGA,EAAI8R,EAAQpO,OAAQ1D,IAAK,CACrC,IAAI+R,EAASD,EAAQ9R,GACjB+R,EAAOH,QAAQxC,KACf2C,EAAOH,QAAQxC,GAAGC,QAClB0C,EAAOH,QAAQxC,GAAK,MAK5B,OAFAX,EAAOW,GAAK,KAELc,EAAuBzB,GAAQrG,MAAK,SAAUgH,GAEjD,OADAX,EAAOW,GAAKA,EACRgB,EAAiB3B,GAEV0B,EAAuB1B,GAE3BW,KACRhH,MAAK,SAAUgH,GAGdX,EAAOW,GAAKV,EAAUU,GAAKA,EAC3B,IAAK,IAAIpP,EAAI,EAAGA,EAAI8R,EAAQpO,OAAQ1D,IAChC8R,EAAQ9R,GAAG4R,QAAQxC,GAAKA,KAE7B,UAAS,SAAUhN,GAElB,MADA4M,EAAiBP,EAAQrM,GACnBA,KAMd,SAAS4P,EAAkBvD,EAAQtN,EAAMkL,EAAU4F,QAC/BC,IAAZD,IACAA,EAAU,GAGd,IACI,IAAIE,EAAK1D,EAAOW,GAAGzB,YAAYc,EAAOmB,UAAWzO,GACjDkL,EAAS,KAAM8F,GACjB,MAAO/P,GACL,GAAI6P,EAAU,KAAOxD,EAAOW,IAAmB,sBAAbhN,EAAI7B,MAA6C,kBAAb6B,EAAI7B,MACtE,OAAO4L,EAAUlE,UAAUG,MAAK,WAC5B,IAAKqG,EAAOW,IAAmB,kBAAbhN,EAAI7B,OAA6BkO,EAAOW,GAAGmB,iBAAiBC,SAAS/B,EAAOmB,YAAcnB,EAAOc,SAAWd,EAAOW,GAAGG,QAMpI,OAJId,EAAOW,KACPX,EAAOc,QAAUd,EAAOW,GAAGG,QAAU,GAGlCY,EAAuB1B,MAEnCrG,MAAK,WACJ,OAAOyJ,EAAcpD,GAAQrG,MAAK,WAC9B4J,EAAkBvD,EAAQtN,EAAMkL,EAAU4F,EAAU,SAEzD,SAAS5F,GAGhBA,EAASjK,IAIjB,SAAS+M,IACL,MAAO,CAEH2C,QAAS,GAET1C,GAAI,KAEJP,QAAS,KAETD,mBAAoB,IAM5B,SAASwD,EAAaC,GAClB,IAAI1S,EAAOC,KACP6O,EAAS,CACTW,GAAI,MAGR,GAAIiD,EACA,IAAK,IAAIrS,KAAKqS,EACV5D,EAAOzO,GAAKqS,EAAQrS,GAK5B,IAAI0O,EAAY3B,EAAW0B,EAAOlO,MAG7BmO,IACDA,EAAYS,IAEZpC,EAAW0B,EAAOlO,MAAQmO,GAI9BA,EAAUoD,QAAQvL,KAAK5G,GAGlBA,EAAKgS,aACNhS,EAAKgS,WAAahS,EAAK2S,MACvB3S,EAAK2S,MAAQZ,GAIjB,IAAIa,EAAe,GAEnB,SAASC,IAGL,OAAOrG,EAAUlE,UAGrB,IAAK,IAAIwK,EAAI,EAAGA,EAAI/D,EAAUoD,QAAQpO,OAAQ+O,IAAK,CAC/C,IAAIV,EAASrD,EAAUoD,QAAQW,GAC3BV,IAAWpS,GAEX4S,EAAahM,KAAKwL,EAAOJ,aAAa,SAASa,IAKvD,IAAIV,EAAUpD,EAAUoD,QAAQY,MAAM,GAItC,OAAOvG,EAAUnD,IAAIuJ,GAAcnK,MAAK,WAGpC,OAFAqG,EAAOW,GAAKV,EAAUU,GAEfc,EAAuBzB,MAC/BrG,MAAK,SAAUgH,GAEd,OADAX,EAAOW,GAAKA,EACRgB,EAAiB3B,EAAQ9O,EAAKgT,eAAepD,SAEtCY,EAAuB1B,GAE3BW,KACRhH,MAAK,SAAUgH,GACdX,EAAOW,GAAKV,EAAUU,GAAKA,EAC3BzP,EAAKiS,QAAUnD,EAEf,IAAK,IAAImE,EAAI,EAAGA,EAAId,EAAQpO,OAAQkP,IAAK,CACrC,IAAIb,EAASD,EAAQc,GACjBb,IAAWpS,IAEXoS,EAAOH,QAAQxC,GAAKX,EAAOW,GAC3B2C,EAAOH,QAAQrC,QAAUd,EAAOc,aAMhD,SAASsD,EAAQtR,EAAK8K,GAClB,IAAI1M,EAAOC,KAEX2B,EAAMiL,EAAajL,GAEnB,IAAI+F,EAAU,IAAI6E,GAAU,SAAUlE,EAASD,GAC3CrI,EAAK2S,QAAQlK,MAAK,WACd4J,EAAkBrS,EAAKiS,QAAS5E,GAAW,SAAU5K,EAAKuL,GACtD,GAAIvL,EACA,OAAO4F,EAAO5F,GAGlB,IACI,IAAI0Q,EAAQnF,EAAYE,YAAYlO,EAAKiS,QAAQhC,WAC7CmD,EAAMD,EAAMjS,IAAIU,GAEpBwR,EAAI9C,UAAY,WACZ,IAAIhP,EAAQ8R,EAAIpK,YACFuJ,IAAVjR,IACAA,EAAQ,MAERwQ,EAAexQ,KACfA,EAAQoQ,EAAYpQ,IAExBgH,EAAQhH,IAGZ8R,EAAI/C,QAAU,WACVhI,EAAO+K,EAAItJ,QAEjB,MAAO1F,GACLiE,EAAOjE,UAGhB,SAASiE,MAIhB,OADAoE,EAAgB9E,EAAS+E,GAClB/E,EAIX,SAAS0L,EAAQhJ,EAAUqC,GACvB,IAAI1M,EAAOC,KAEP0H,EAAU,IAAI6E,GAAU,SAAUlE,EAASD,GAC3CrI,EAAK2S,QAAQlK,MAAK,WACd4J,EAAkBrS,EAAKiS,QAAS5E,GAAW,SAAU5K,EAAKuL,GACtD,GAAIvL,EACA,OAAO4F,EAAO5F,GAGlB,IACI,IAAI0Q,EAAQnF,EAAYE,YAAYlO,EAAKiS,QAAQhC,WAC7CmD,EAAMD,EAAMG,aACZC,EAAkB,EAEtBH,EAAI9C,UAAY,WACZ,IAAIkD,EAASJ,EAAIpK,OAEjB,GAAIwK,EAAQ,CACR,IAAIlS,EAAQkS,EAAOlS,MACfwQ,EAAexQ,KACfA,EAAQoQ,EAAYpQ,IAExB,IAAI0H,EAASqB,EAAS/I,EAAOkS,EAAO5R,IAAK2R,UAK1B,IAAXvK,EACAV,EAAQU,GAERwK,EAAO,mBAGXlL,KAIR8K,EAAI/C,QAAU,WACVhI,EAAO+K,EAAItJ,QAEjB,MAAO1F,GACLiE,EAAOjE,UAGhB,SAASiE,MAKhB,OAFAoE,EAAgB9E,EAAS+E,GAElB/E,EAGX,SAAS8L,EAAQ7R,EAAKN,EAAOoL,GACzB,IAAI1M,EAAOC,KAEX2B,EAAMiL,EAAajL,GAEnB,IAAI+F,EAAU,IAAI6E,GAAU,SAAUlE,EAASD,GAC3C,IAAIyG,EACJ9O,EAAK2S,QAAQlK,MAAK,WAEd,OADAqG,EAAS9O,EAAKiS,QACe,kBAAzB1I,EAAS/I,KAAKc,GACPsN,EAAkBE,EAAOW,IAAIhH,MAAK,SAAUiL,GAC/C,OAAIA,EACOpS,EAEJ2P,EAAY3P,MAGpBA,KACRmH,MAAK,SAAUnH,GACd+Q,EAAkBrS,EAAKiS,QAAS3E,GAAY,SAAU7K,EAAKuL,GACvD,GAAIvL,EACA,OAAO4F,EAAO5F,GAGlB,IACI,IAAI0Q,EAAQnF,EAAYE,YAAYlO,EAAKiS,QAAQhC,WAMnC,OAAV3O,IACAA,OAAQiR,GAGZ,IAAIa,EAAMD,EAAMhF,IAAI7M,EAAOM,GAE3BoM,EAAYO,WAAa,gBAOPgE,IAAVjR,IACAA,EAAQ,MAGZgH,EAAQhH,IAEZ0M,EAAYI,QAAUJ,EAAYqC,QAAU,WACxC,IAAI5N,EAAM2Q,EAAItJ,MAAQsJ,EAAItJ,MAAQsJ,EAAIpF,YAAYlE,MAClDzB,EAAO5F,IAEb,MAAO2B,GACLiE,EAAOjE,UAGhB,SAASiE,MAIhB,OADAoE,EAAgB9E,EAAS+E,GAClB/E,EAGX,SAASgM,EAAW/R,EAAK8K,GACrB,IAAI1M,EAAOC,KAEX2B,EAAMiL,EAAajL,GAEnB,IAAI+F,EAAU,IAAI6E,GAAU,SAAUlE,EAASD,GAC3CrI,EAAK2S,QAAQlK,MAAK,WACd4J,EAAkBrS,EAAKiS,QAAS3E,GAAY,SAAU7K,EAAKuL,GACvD,GAAIvL,EACA,OAAO4F,EAAO5F,GAGlB,IACI,IAAI0Q,EAAQnF,EAAYE,YAAYlO,EAAKiS,QAAQhC,WAM7CmD,EAAMD,EAAM,UAAUvR,GAC1BoM,EAAYO,WAAa,WACrBjG,KAGJ0F,EAAYqC,QAAU,WAClBhI,EAAO+K,EAAItJ,QAKfkE,EAAYI,QAAU,WAClB,IAAI3L,EAAM2Q,EAAItJ,MAAQsJ,EAAItJ,MAAQsJ,EAAIpF,YAAYlE,MAClDzB,EAAO5F,IAEb,MAAO2B,GACLiE,EAAOjE,UAGhB,SAASiE,MAIhB,OADAoE,EAAgB9E,EAAS+E,GAClB/E,EAGX,SAASiM,EAAMlH,GACX,IAAI1M,EAAOC,KAEP0H,EAAU,IAAI6E,GAAU,SAAUlE,EAASD,GAC3CrI,EAAK2S,QAAQlK,MAAK,WACd4J,EAAkBrS,EAAKiS,QAAS3E,GAAY,SAAU7K,EAAKuL,GACvD,GAAIvL,EACA,OAAO4F,EAAO5F,GAGlB,IACI,IAAI0Q,EAAQnF,EAAYE,YAAYlO,EAAKiS,QAAQhC,WAC7CmD,EAAMD,EAAMS,QAEhB5F,EAAYO,WAAa,WACrBjG,KAGJ0F,EAAYI,QAAUJ,EAAYqC,QAAU,WACxC,IAAI5N,EAAM2Q,EAAItJ,MAAQsJ,EAAItJ,MAAQsJ,EAAIpF,YAAYlE,MAClDzB,EAAO5F,IAEb,MAAO2B,GACLiE,EAAOjE,UAGhB,SAASiE,MAIhB,OADAoE,EAAgB9E,EAAS+E,GAClB/E,EAGX,SAAS5D,EAAO2I,GACZ,IAAI1M,EAAOC,KAEP0H,EAAU,IAAI6E,GAAU,SAAUlE,EAASD,GAC3CrI,EAAK2S,QAAQlK,MAAK,WACd4J,EAAkBrS,EAAKiS,QAAS5E,GAAW,SAAU5K,EAAKuL,GACtD,GAAIvL,EACA,OAAO4F,EAAO5F,GAGlB,IACI,IAAI0Q,EAAQnF,EAAYE,YAAYlO,EAAKiS,QAAQhC,WAC7CmD,EAAMD,EAAMU,QAEhBT,EAAI9C,UAAY,WACZhI,EAAQ8K,EAAIpK,SAGhBoK,EAAI/C,QAAU,WACVhI,EAAO+K,EAAItJ,QAEjB,MAAO1F,GACLiE,EAAOjE,UAGhB,SAASiE,MAIhB,OADAoE,EAAgB9E,EAAS+E,GAClB/E,EAGX,SAAS/F,EAAIE,EAAG4K,GACZ,IAAI1M,EAAOC,KAEP0H,EAAU,IAAI6E,GAAU,SAAUlE,EAASD,GACvCvG,EAAI,EACJwG,EAAQ,MAKZtI,EAAK2S,QAAQlK,MAAK,WACd4J,EAAkBrS,EAAKiS,QAAS5E,GAAW,SAAU5K,EAAKuL,GACtD,GAAIvL,EACA,OAAO4F,EAAO5F,GAGlB,IACI,IAAI0Q,EAAQnF,EAAYE,YAAYlO,EAAKiS,QAAQhC,WAC7C6D,GAAW,EACXV,EAAMD,EAAMG,aAEhBF,EAAI9C,UAAY,WACZ,IAAIkD,EAASJ,EAAIpK,OACZwK,EAOK,IAAN1R,GAKKgS,EAFLxL,EAAQkL,EAAO5R,MAKXkS,GAAW,EACXN,EAAOO,QAAQjS,IAdnBwG,EAAQ,OAsBhB8K,EAAI/C,QAAU,WACVhI,EAAO+K,EAAItJ,QAEjB,MAAO1F,GACLiE,EAAOjE,UAGhB,SAASiE,MAIhB,OADAoE,EAAgB9E,EAAS+E,GAClB/E,EAGX,SAASqM,EAAKtH,GACV,IAAI1M,EAAOC,KAEP0H,EAAU,IAAI6E,GAAU,SAAUlE,EAASD,GAC3CrI,EAAK2S,QAAQlK,MAAK,WACd4J,EAAkBrS,EAAKiS,QAAS5E,GAAW,SAAU5K,EAAKuL,GACtD,GAAIvL,EACA,OAAO4F,EAAO5F,GAGlB,IACI,IAAI0Q,EAAQnF,EAAYE,YAAYlO,EAAKiS,QAAQhC,WAC7CmD,EAAMD,EAAMG,aACZU,EAAO,GAEXZ,EAAI9C,UAAY,WACZ,IAAIkD,EAASJ,EAAIpK,OAEZwK,GAKLQ,EAAKpN,KAAK4M,EAAO5R,KACjB4R,EAAO,eALHlL,EAAQ0L,IAQhBZ,EAAI/C,QAAU,WACVhI,EAAO+K,EAAItJ,QAEjB,MAAO1F,GACLiE,EAAOjE,UAGhB,SAASiE,MAIhB,OADAoE,EAAgB9E,EAAS+E,GAClB/E,EAGX,SAASsM,EAAavB,EAAShG,GAC3BA,EAAWO,EAAYvE,MAAMzI,KAAM0I,WAEnC,IAAIuL,EAAgBjU,KAAKkU,SACzBzB,EAA6B,oBAAZA,GAA0BA,GAAW,GACjDA,EAAQ9R,OACT8R,EAAQ9R,KAAO8R,EAAQ9R,MAAQsT,EAActT,KAC7C8R,EAAQzC,UAAYyC,EAAQzC,WAAaiE,EAAcjE,WAG3D,IACItI,EADA3H,EAAOC,KAEX,GAAKyS,EAAQ9R,KAEN,CACH,IAAIwT,EAAc1B,EAAQ9R,OAASsT,EAActT,MAAQZ,EAAKiS,QAAQxC,GAElE4E,EAAYD,EAAc5H,EAAUlE,QAAQtI,EAAKiS,QAAQxC,IAAMc,EAAuBmC,GAASjK,MAAK,SAAUgH,GAC9G,IAAIV,EAAY3B,EAAWsF,EAAQ9R,MAC/BuR,EAAUpD,EAAUoD,QACxBpD,EAAUU,GAAKA,EACf,IAAK,IAAIpP,EAAI,EAAGA,EAAI8R,EAAQpO,OAAQ1D,IAChC8R,EAAQ9R,GAAG4R,QAAQxC,GAAKA,EAE5B,OAAOA,KAgDP9H,EA7CC+K,EAAQzC,UA6CCoE,EAAU5L,MAAK,SAAUgH,GAC/B,GAAKA,EAAGmB,iBAAiBC,SAAS6B,EAAQzC,WAA1C,CAIA,IAAIG,EAAaX,EAAGG,QAAU,EAE9Bf,EAAgB6D,GAEhB,IAAI3D,EAAY3B,EAAWsF,EAAQ9R,MAC/BuR,EAAUpD,EAAUoD,QAExB1C,EAAGC,QACH,IAAK,IAAIrP,EAAI,EAAGA,EAAI8R,EAAQpO,OAAQ1D,IAAK,CACrC,IAAI+R,EAASD,EAAQ9R,GACrB+R,EAAOH,QAAQxC,GAAK,KACpB2C,EAAOH,QAAQrC,QAAUQ,EAG7B,IAAIkE,EAAoB,IAAI9H,GAAU,SAAUlE,EAASD,GACrD,IAAI+K,EAAMrI,EAAI+E,KAAK4C,EAAQ9R,KAAMwP,GAEjCgD,EAAI/C,QAAU,SAAU5N,GACpB,IAAIgN,EAAK2D,EAAIpK,OACbyG,EAAGC,QACHrH,EAAO5F,IAGX2Q,EAAIrD,gBAAkB,WAClB,IAAIN,EAAK2D,EAAIpK,OACbyG,EAAG8E,kBAAkB7B,EAAQzC,YAGjCmD,EAAI9C,UAAY,WACZ,IAAIb,EAAK2D,EAAIpK,OACbyG,EAAGC,QACHpH,EAAQmH,OAIhB,OAAO6E,EAAkB7L,MAAK,SAAUgH,GACpCV,EAAUU,GAAKA,EACf,IAAK,IAAIqD,EAAI,EAAGA,EAAIX,EAAQpO,OAAQ+O,IAAK,CACrC,IAAI0B,EAAWrC,EAAQW,GACvB0B,EAASvC,QAAQxC,GAAKA,EACtBN,EAAkBqF,EAASvC,aAEhC,UAAS,SAAUxP,GAElB,MADC4M,EAAiBqD,EAASjQ,IAAQ+J,EAAUlE,WAAW,UAAS,eAC3D7F,SA7FJ4R,EAAU5L,MAAK,SAAUgH,GAC/BZ,EAAgB6D,GAEhB,IAAI3D,EAAY3B,EAAWsF,EAAQ9R,MAC/BuR,EAAUpD,EAAUoD,QAExB1C,EAAGC,QACH,IAAK,IAAIrP,EAAI,EAAGA,EAAI8R,EAAQpO,OAAQ1D,IAAK,CACrC,IAAI+R,EAASD,EAAQ9R,GACrB+R,EAAOH,QAAQxC,GAAK,KAGxB,IAAIgF,EAAgB,IAAIjI,GAAU,SAAUlE,EAASD,GACjD,IAAI+K,EAAMrI,EAAI2J,eAAehC,EAAQ9R,MAErCwS,EAAI/C,QAAU+C,EAAIuB,UAAY,SAAUlS,GACpC,IAAIgN,EAAK2D,EAAIpK,OACTyG,GACAA,EAAGC,QAEPrH,EAAO5F,IAGX2Q,EAAI9C,UAAY,WACZ,IAAIb,EAAK2D,EAAIpK,OACTyG,GACAA,EAAGC,QAEPpH,EAAQmH,OAIhB,OAAOgF,EAAchM,MAAK,SAAUgH,GAChCV,EAAUU,GAAKA,EACf,IAAK,IAAIpP,EAAI,EAAGA,EAAI8R,EAAQpO,OAAQ1D,IAAK,CACrC,IAAIuU,EAAUzC,EAAQ9R,GACtB8O,EAAkByF,EAAQ3C,aAE/B,UAAS,SAAUxP,GAElB,MADC4M,EAAiBqD,EAASjQ,IAAQ+J,EAAUlE,WAAW,UAAS,eAC3D7F,aAvDlBkF,EAAU6E,EAAUnE,OAAO,qBAmH/B,OADAoE,EAAgB9E,EAAS+E,GAClB/E,EAGX,IAAIkN,EAAe,CACfC,QAAS,eACTrC,aAAcA,EACdsC,SAAU/J,IACVqI,QAASA,EACTH,QAASA,EACTO,QAASA,EACTE,WAAYA,EACZC,MAAOA,EACP7P,OAAQA,EACRnC,IAAKA,EACLoS,KAAMA,EACNC,aAAcA,GAGlB,SAASe,IACL,MAA+B,oBAAjB9J,aAMlB,IAAI+J,EAAa,mEAEbC,EAAmB,uBACnBC,EAAyB,gCAEzBC,EAAoB,YACpBC,EAA2BD,EAAkBrR,OAG7CuR,GAAmB,OACnBC,GAAY,OACZC,GAAiB,OACjBC,GAAkB,OAClBC,GAAyB,OACzBC,GAAkB,OAClBC,GAAkB,OAClBC,GAAmB,OACnBC,GAAmB,OACnBC,GAAoB,OACpBC,GAAoB,OACpBC,GAAgCZ,EAA2BC,GAAiBvR,OAE5EmS,GAAanV,OAAOkB,UAAUsH,SAElC,SAAS4M,GAAeC,GAEpB,IAEI/V,EAEAgW,EAAUC,EAAUC,EAAUC,EAJ9BC,EAAyC,IAA1BL,EAAiBrS,OAChC0C,EAAM2P,EAAiBrS,OAEvB5B,EAAI,EAG8C,MAAlDiU,EAAiBA,EAAiBrS,OAAS,KAC3C0S,IACsD,MAAlDL,EAAiBA,EAAiBrS,OAAS,IAC3C0S,KAIR,IAAIC,EAAS,IAAIhJ,YAAY+I,GACzBE,EAAQ,IAAI/I,WAAW8I,GAE3B,IAAKrW,EAAI,EAAGA,EAAIoG,EAAKpG,GAAK,EACtBgW,EAAWpB,EAAWxJ,QAAQ2K,EAAiB/V,IAC/CiW,EAAWrB,EAAWxJ,QAAQ2K,EAAiB/V,EAAI,IACnDkW,EAAWtB,EAAWxJ,QAAQ2K,EAAiB/V,EAAI,IACnDmW,EAAWvB,EAAWxJ,QAAQ2K,EAAiB/V,EAAI,IAGnDsW,EAAMxU,KAAOkU,GAAY,EAAIC,GAAY,EACzCK,EAAMxU,MAAmB,GAAXmU,IAAkB,EAAIC,GAAY,EAChDI,EAAMxU,MAAmB,EAAXoU,IAAiB,EAAe,GAAXC,EAEvC,OAAOE,EAKX,SAASE,GAAeF,GAEpB,IAEIrW,EAFAsW,EAAQ,IAAI/I,WAAW8I,GACvBG,EAAe,GAGnB,IAAKxW,EAAI,EAAGA,EAAIsW,EAAM5S,OAAQ1D,GAAK,EAE/BwW,GAAgB5B,EAAW0B,EAAMtW,IAAM,GACvCwW,GAAgB5B,GAAuB,EAAX0B,EAAMtW,KAAW,EAAIsW,EAAMtW,EAAI,IAAM,GACjEwW,GAAgB5B,GAA2B,GAAf0B,EAAMtW,EAAI,KAAY,EAAIsW,EAAMtW,EAAI,IAAM,GACtEwW,GAAgB5B,EAA0B,GAAf0B,EAAMtW,EAAI,IASzC,OANIsW,EAAM5S,OAAS,IAAM,EACrB8S,EAAeA,EAAaC,UAAU,EAAGD,EAAa9S,OAAS,GAAK,IAC7D4S,EAAM5S,OAAS,IAAM,IAC5B8S,EAAeA,EAAaC,UAAU,EAAGD,EAAa9S,OAAS,GAAK,MAGjE8S,EAMX,SAASE,GAAUzV,EAAOoL,GACtB,IAAIsK,EAAY,GAShB,GARI1V,IACA0V,EAAYd,GAAW1V,KAAKc,IAO5BA,IAAwB,yBAAd0V,GAAwC1V,EAAMoV,QAA4C,yBAAlCR,GAAW1V,KAAKc,EAAMoV,SAAqC,CAG7H,IAAIA,EACAO,EAAS7B,EAET9T,aAAiBoM,aACjBgJ,EAASpV,EACT2V,GAAU3B,KAEVoB,EAASpV,EAAMoV,OAEG,uBAAdM,EACAC,GAAUzB,GACW,wBAAdwB,EACPC,GAAUxB,GACW,+BAAduB,EACPC,GAAUvB,GACW,wBAAdsB,EACPC,GAAUtB,GACW,yBAAdqB,EACPC,GAAUpB,GACW,wBAAdmB,EACPC,GAAUrB,GACW,yBAAdoB,EACPC,GAAUnB,GACW,0BAAdkB,EACPC,GAAUlB,GACW,0BAAdiB,EACPC,GAAUjB,GAEVtJ,EAAS,IAAIlK,MAAM,wCAI3BkK,EAASuK,EAASL,GAAeF,SAC9B,GAAkB,kBAAdM,EAA+B,CAEtC,IAAIE,EAAa,IAAI/F,WAErB+F,EAAWC,OAAS,WAEhB,IAAIC,EAAMlC,EAAmB5T,EAAMiL,KAAO,IAAMqK,GAAe3W,KAAK+I,QAEpE0D,EAAS0I,EAAoBG,GAAY6B,IAG7CF,EAAWG,kBAAkB/V,QAE7B,IACIoL,EAAS4K,KAAKC,UAAUjW,IAC1B,MAAO8C,GACL0I,QAAQhD,MAAM,8CAA+CxI,GAE7DoL,EAAS,KAAMtI,IAa3B,SAASoT,GAAYlW,GAIjB,GAAIA,EAAMwV,UAAU,EAAGzB,KAA8BD,EACjD,OAAOkC,KAAKG,MAAMnW,GAMtB,IAGIoW,EAHAtB,EAAmB9U,EAAMwV,UAAUb,IACnC1J,EAAOjL,EAAMwV,UAAUzB,EAA0BY,IAKrD,GAAI1J,IAASgJ,IAAaJ,EAAuBhK,KAAKiL,GAAmB,CACrE,IAAIuB,EAAUvB,EAAiB3H,MAAM0G,GACrCuC,EAAWC,EAAQ,GACnBvB,EAAmBA,EAAiBU,UAAUa,EAAQ,GAAG5T,QAE7D,IAAI2S,EAASP,GAAeC,GAI5B,OAAQ7J,GACJ,KAAK+I,GACD,OAAOoB,EACX,KAAKnB,GACD,OAAO5J,EAAW,CAAC+K,GAAS,CAAEnK,KAAMmL,IACxC,KAAKlC,GACD,OAAO,IAAIoC,UAAUlB,GACzB,KAAKjB,GACD,OAAO,IAAI7H,WAAW8I,GAC1B,KAAKhB,GACD,OAAO,IAAImC,kBAAkBnB,GACjC,KAAKf,GACD,OAAO,IAAImC,WAAWpB,GAC1B,KAAKb,GACD,OAAO,IAAIkC,YAAYrB,GAC3B,KAAKd,GACD,OAAO,IAAIoC,WAAWtB,GAC1B,KAAKZ,GACD,OAAO,IAAImC,YAAYvB,GAC3B,KAAKX,GACD,OAAO,IAAImC,aAAaxB,GAC5B,KAAKV,GACD,OAAO,IAAImC,aAAazB,GAC5B,QACI,MAAM,IAAIlU,MAAM,gBAAkB+J,IAI9C,IAAI6L,GAAwB,CACxBrB,UAAWA,GACXS,YAAaA,GACbrB,eAAgBA,GAChBS,eAAgBA,IAapB,SAASyB,GAAc9W,EAAGuN,EAAQpC,EAAUE,GACxCrL,EAAE+W,WAAW,8BAAgCxJ,EAAOmB,UAAvC,+CAAwG,GAAIvD,EAAUE,GAKvI,SAAS2L,GAAe7F,GACpB,IAAI1S,EAAOC,KACP6O,EAAS,CACTW,GAAI,MAGR,GAAIiD,EACA,IAAK,IAAIrS,KAAKqS,EACV5D,EAAOzO,GAA2B,kBAAfqS,EAAQrS,GAAkBqS,EAAQrS,GAAGkJ,WAAamJ,EAAQrS,GAIrF,IAAImY,EAAgB,IAAIhM,GAAU,SAAUlE,EAASD,GAGjD,IACIyG,EAAOW,GAAKvE,aAAa4D,EAAOlO,KAAMoM,OAAO8B,EAAOc,SAAUd,EAAO2J,YAAa3J,EAAO4J,MAC3F,MAAOtU,GACL,OAAOiE,EAAOjE,GAIlB0K,EAAOW,GAAGzB,aAAY,SAAUzM,GAC5B8W,GAAc9W,EAAGuN,GAAQ,WACrB9O,EAAKiS,QAAUnD,EACfxG,OACD,SAAU/G,EAAGuI,GACZzB,EAAOyB,QAEZzB,MAIP,OADAyG,EAAO6J,WAAaP,GACbI,EAGX,SAASI,GAAcrX,EAAGuN,EAAQ+J,EAAcC,EAAMpM,EAAUE,GAC5DrL,EAAE+W,WAAWO,EAAcC,EAAMpM,GAAU,SAAUnL,EAAGuI,GAChDA,EAAMtF,OAASsF,EAAMiP,WACrBxX,EAAE+W,WAAW,iEAAuE,CAACxJ,EAAOmB,YAAY,SAAU1O,EAAGyX,GAC5GA,EAAQC,KAAKlV,OAOd6I,EAAcrL,EAAGuI,GAJjBuO,GAAc9W,EAAGuN,GAAQ,WACrBvN,EAAE+W,WAAWO,EAAcC,EAAMpM,EAAUE,KAC5CA,KAIRA,GAEHA,EAAcrL,EAAGuI,KAEtB8C,GAGP,SAASsM,GAAUtX,EAAK8K,GACpB,IAAI1M,EAAOC,KAEX2B,EAAMiL,EAAajL,GAEnB,IAAI+F,EAAU,IAAI6E,GAAU,SAAUlE,EAASD,GAC3CrI,EAAK2S,QAAQlK,MAAK,WACd,IAAIqG,EAAS9O,EAAKiS,QAClBnD,EAAOW,GAAGzB,aAAY,SAAUzM,GAC5BqX,GAAcrX,EAAGuN,EAAQ,iBAAmBA,EAAOmB,UAAY,yBAA0B,CAACrO,IAAM,SAAUL,EAAGyX,GACzG,IAAIhQ,EAASgQ,EAAQC,KAAKlV,OAASiV,EAAQC,KAAKE,KAAK,GAAG7X,MAAQ,KAI5D0H,IACAA,EAAS8F,EAAO6J,WAAWnB,YAAYxO,IAG3CV,EAAQU,MACT,SAAUzH,EAAGuI,GACZzB,EAAOyB,YAGhB,SAASzB,MAIhB,OADAoE,EAAgB9E,EAAS+E,GAClB/E,EAGX,SAASyR,GAAU/O,EAAUqC,GACzB,IAAI1M,EAAOC,KAEP0H,EAAU,IAAI6E,GAAU,SAAUlE,EAASD,GAC3CrI,EAAK2S,QAAQlK,MAAK,WACd,IAAIqG,EAAS9O,EAAKiS,QAElBnD,EAAOW,GAAGzB,aAAY,SAAUzM,GAC5BqX,GAAcrX,EAAGuN,EAAQ,iBAAmBA,EAAOmB,UAAW,IAAI,SAAU1O,EAAGyX,GAI3E,IAHA,IAAIC,EAAOD,EAAQC,KACflV,EAASkV,EAAKlV,OAET1D,EAAI,EAAGA,EAAI0D,EAAQ1D,IAAK,CAC7B,IAAI8Y,EAAOF,EAAKE,KAAK9Y,GACjB2I,EAASmQ,EAAK7X,MAYlB,GARI0H,IACAA,EAAS8F,EAAO6J,WAAWnB,YAAYxO,IAG3CA,EAASqB,EAASrB,EAAQmQ,EAAKvX,IAAKvB,EAAI,QAIzB,IAAX2I,EAEA,YADAV,EAAQU,GAKhBV,OACD,SAAU/G,EAAGuI,GACZzB,EAAOyB,YAGhB,SAASzB,MAIhB,OADAoE,EAAgB9E,EAAS+E,GAClB/E,EAGX,SAAS0R,GAASzX,EAAKN,EAAOoL,EAAU4M,GACpC,IAAItZ,EAAOC,KAEX2B,EAAMiL,EAAajL,GAEnB,IAAI+F,EAAU,IAAI6E,GAAU,SAAUlE,EAASD,GAC3CrI,EAAK2S,QAAQlK,MAAK,gBAIA8J,IAAVjR,IACAA,EAAQ,MAIZ,IAAIiY,EAAgBjY,EAEhBwN,EAAS9O,EAAKiS,QAClBnD,EAAO6J,WAAW5B,UAAUzV,GAAO,SAAUA,EAAOwI,GAC5CA,EACAzB,EAAOyB,GAEPgF,EAAOW,GAAGzB,aAAY,SAAUzM,GAC5BqX,GAAcrX,EAAGuN,EAAQ,0BAA4BA,EAAOmB,UAAnC,8BAAmF,CAACrO,EAAKN,IAAQ,WACtHgH,EAAQiR,MACT,SAAUhY,EAAGuI,GACZzB,EAAOyB,SAEZ,SAAU0P,GAGT,GAAIA,EAAShV,OAASgV,EAASC,UAAW,CAQtC,GAAIH,EAAc,EAEd,YADAhR,EAAQ+Q,GAAS3Q,MAAM1I,EAAM,CAAC4B,EAAK2X,EAAe7M,EAAU4M,EAAc,KAG9EjR,EAAOmR,aAKxB,SAASnR,MAIhB,OADAoE,EAAgB9E,EAAS+E,GAClB/E,EAGX,SAAS+R,GAAU9X,EAAKN,EAAOoL,GAC3B,OAAO2M,GAAS3Q,MAAMzI,KAAM,CAAC2B,EAAKN,EAAOoL,EAAU,IAGvD,SAASiN,GAAa/X,EAAK8K,GACvB,IAAI1M,EAAOC,KAEX2B,EAAMiL,EAAajL,GAEnB,IAAI+F,EAAU,IAAI6E,GAAU,SAAUlE,EAASD,GAC3CrI,EAAK2S,QAAQlK,MAAK,WACd,IAAIqG,EAAS9O,EAAKiS,QAClBnD,EAAOW,GAAGzB,aAAY,SAAUzM,GAC5BqX,GAAcrX,EAAGuN,EAAQ,eAAiBA,EAAOmB,UAAY,iBAAkB,CAACrO,IAAM,WAClF0G,OACD,SAAU/G,EAAGuI,GACZzB,EAAOyB,YAGhB,SAASzB,MAIhB,OADAoE,EAAgB9E,EAAS+E,GAClB/E,EAKX,SAASiS,GAAQlN,GACb,IAAI1M,EAAOC,KAEP0H,EAAU,IAAI6E,GAAU,SAAUlE,EAASD,GAC3CrI,EAAK2S,QAAQlK,MAAK,WACd,IAAIqG,EAAS9O,EAAKiS,QAClBnD,EAAOW,GAAGzB,aAAY,SAAUzM,GAC5BqX,GAAcrX,EAAGuN,EAAQ,eAAiBA,EAAOmB,UAAW,IAAI,WAC5D3H,OACD,SAAU/G,EAAGuI,GACZzB,EAAOyB,YAGhB,SAASzB,MAIhB,OADAoE,EAAgB9E,EAAS+E,GAClB/E,EAKX,SAASkS,GAASnN,GACd,IAAI1M,EAAOC,KAEP0H,EAAU,IAAI6E,GAAU,SAAUlE,EAASD,GAC3CrI,EAAK2S,QAAQlK,MAAK,WACd,IAAIqG,EAAS9O,EAAKiS,QAClBnD,EAAOW,GAAGzB,aAAY,SAAUzM,GAE5BqX,GAAcrX,EAAGuN,EAAQ,+BAAiCA,EAAOmB,UAAW,IAAI,SAAU1O,EAAGyX,GACzF,IAAIhQ,EAASgQ,EAAQC,KAAKE,KAAK,GAAGzY,EAClC4H,EAAQU,MACT,SAAUzH,EAAGuI,GACZzB,EAAOyB,YAGhB,SAASzB,MAIhB,OADAoE,EAAgB9E,EAAS+E,GAClB/E,EAUX,SAASmS,GAAMhY,EAAG4K,GACd,IAAI1M,EAAOC,KAEP0H,EAAU,IAAI6E,GAAU,SAAUlE,EAASD,GAC3CrI,EAAK2S,QAAQlK,MAAK,WACd,IAAIqG,EAAS9O,EAAKiS,QAClBnD,EAAOW,GAAGzB,aAAY,SAAUzM,GAC5BqX,GAAcrX,EAAGuN,EAAQ,mBAAqBA,EAAOmB,UAAY,wBAAyB,CAACnO,EAAI,IAAI,SAAUP,EAAGyX,GAC5G,IAAIhQ,EAASgQ,EAAQC,KAAKlV,OAASiV,EAAQC,KAAKE,KAAK,GAAGvX,IAAM,KAC9D0G,EAAQU,MACT,SAAUzH,EAAGuI,GACZzB,EAAOyB,YAGhB,SAASzB,MAIhB,OADAoE,EAAgB9E,EAAS+E,GAClB/E,EAGX,SAASoS,GAAOrN,GACZ,IAAI1M,EAAOC,KAEP0H,EAAU,IAAI6E,GAAU,SAAUlE,EAASD,GAC3CrI,EAAK2S,QAAQlK,MAAK,WACd,IAAIqG,EAAS9O,EAAKiS,QAClBnD,EAAOW,GAAGzB,aAAY,SAAUzM,GAC5BqX,GAAcrX,EAAGuN,EAAQ,mBAAqBA,EAAOmB,UAAW,IAAI,SAAU1O,EAAGyX,GAG7E,IAFA,IAAIhF,EAAO,GAEF3T,EAAI,EAAGA,EAAI2Y,EAAQC,KAAKlV,OAAQ1D,IACrC2T,EAAKpN,KAAKoS,EAAQC,KAAKE,KAAK9Y,GAAGuB,KAGnC0G,EAAQ0L,MACT,SAAUzS,EAAGuI,GACZzB,EAAOyB,YAGhB,SAASzB,MAIhB,OADAoE,EAAgB9E,EAAS+E,GAClB/E,EAKX,SAASqS,GAAiBvK,GACtB,OAAO,IAAIjD,GAAU,SAAUlE,EAASD,GACpCoH,EAAGzB,aAAY,SAAUzM,GACrBA,EAAE+W,WAAW,8FAAoG,IAAI,SAAU/W,EAAGyX,GAG9H,IAFA,IAAIiB,EAAa,GAER5Z,EAAI,EAAGA,EAAI2Y,EAAQC,KAAKlV,OAAQ1D,IACrC4Z,EAAWrT,KAAKoS,EAAQC,KAAKE,KAAK9Y,GAAGO,MAGzC0H,EAAQ,CACJmH,GAAIA,EACJwK,WAAYA,OAEjB,SAAU1Y,EAAGuI,GACZzB,EAAOyB,SAEZ,SAAU0P,GACTnR,EAAOmR,SAKnB,SAASU,GAAexH,EAAShG,GAC7BA,EAAWO,EAAYvE,MAAMzI,KAAM0I,WAEnC,IAAIuL,EAAgBjU,KAAKkU,SACzBzB,EAA6B,oBAAZA,GAA0BA,GAAW,GACjDA,EAAQ9R,OACT8R,EAAQ9R,KAAO8R,EAAQ9R,MAAQsT,EAActT,KAC7C8R,EAAQzC,UAAYyC,EAAQzC,WAAaiE,EAAcjE,WAG3D,IACItI,EADA3H,EAAOC,KAsDX,OAjDI0H,EAHC+K,EAAQ9R,KAGC,IAAI4L,GAAU,SAAUlE,GAC9B,IAAImH,EAGAA,EAFAiD,EAAQ9R,OAASsT,EAActT,KAE1BZ,EAAKiS,QAAQxC,GAEbvE,aAAawH,EAAQ9R,KAAM,GAAI,GAAI,GAGvC8R,EAAQzC,UAIT3H,EAAQ,CACJmH,GAAIA,EACJwK,WAAY,CAACvH,EAAQzC,aAJzB3H,EAAQ0R,GAAiBvK,OAO9BhH,MAAK,SAAU0R,GACd,OAAO,IAAI3N,GAAU,SAAUlE,EAASD,GACpC8R,EAAc1K,GAAGzB,aAAY,SAAUzM,GACnC,SAAS6Y,EAAUnK,GACf,OAAO,IAAIzD,GAAU,SAAUlE,EAASD,GACpC9G,EAAE+W,WAAW,wBAA0BrI,EAAW,IAAI,WAClD3H,OACD,SAAU/G,EAAGuI,GACZzB,EAAOyB,SAMnB,IADA,IAAIuQ,EAAa,GACRha,EAAI,EAAGoG,EAAM0T,EAAcF,WAAWlW,OAAQ1D,EAAIoG,EAAKpG,IAC5Dga,EAAWzT,KAAKwT,EAAUD,EAAcF,WAAW5Z,KAGvDmM,EAAUnD,IAAIgR,GAAY5R,MAAK,WAC3BH,OACD,UAAS,SAAUlE,GAClBiE,EAAOjE,SAEZ,SAAUoV,GACTnR,EAAOmR,YA5CThN,EAAUnE,OAAO,qBAkD/BoE,EAAgB9E,EAAS+E,GAClB/E,EAGX,IAAI2S,GAAgB,CAChBxF,QAAS,gBACTrC,aAAc8F,GACdxD,SAAUC,IACV3B,QAAS+F,GACTlG,QAASgG,GACTzF,QAASiG,GACT/F,WAAYgG,GACZ/F,MAAOgG,GACP7V,OAAQ8V,GACRjY,IAAKkY,GACL9F,KAAM+F,GACN9F,aAAciG,IAGlB,SAASK,KACL,IACI,MAA+B,qBAAjBC,cAAgC,YAAaA,gBAEzDA,aAAa/G,QACjB,MAAOrP,GACL,OAAO,GAIf,SAASqW,GAAc/H,EAASgI,GAC5B,IAAIC,EAAYjI,EAAQ9R,KAAO,IAK/B,OAHI8R,EAAQzC,YAAcyK,EAAczK,YACpC0K,GAAajI,EAAQzC,UAAY,KAE9B0K,EAIX,SAASC,KACL,IAAIC,EAAsB,4BAE1B,IAII,OAHAL,aAAa/G,QAAQoH,GAAqB,GAC1CL,aAAa7G,WAAWkH,IAEjB,EACT,MAAOzW,GACL,OAAO,GAQf,SAAS0W,KACL,OAAQF,MAA+BJ,aAAazW,OAAS,EAIjE,SAASgX,GAAerI,GACpB,IAAI1S,EAAOC,KACP6O,EAAS,GACb,GAAI4D,EACA,IAAK,IAAIrS,KAAKqS,EACV5D,EAAOzO,GAAKqS,EAAQrS,GAM5B,OAFAyO,EAAO6L,UAAYF,GAAc/H,EAAS1S,EAAKgT,gBAE1C8H,MAIL9a,EAAKiS,QAAUnD,EACfA,EAAO6J,WAAaP,GAEb5L,EAAUlE,WANNkE,EAAUnE,SAWzB,SAAS2S,GAAQtO,GACb,IAAI1M,EAAOC,KACP0H,EAAU3H,EAAK2S,QAAQlK,MAAK,WAG5B,IAFA,IAAIkS,EAAY3a,EAAKiS,QAAQ0I,UAEpBta,EAAIma,aAAazW,OAAS,EAAG1D,GAAK,EAAGA,IAAK,CAC/C,IAAIuB,EAAM4Y,aAAa5Y,IAAIvB,GAEI,IAA3BuB,EAAI6J,QAAQkP,IACZH,aAAa7G,WAAW/R,OAMpC,OADA6K,EAAgB9E,EAAS+E,GAClB/E,EAMX,SAASsT,GAAUrZ,EAAK8K,GACpB,IAAI1M,EAAOC,KAEX2B,EAAMiL,EAAajL,GAEnB,IAAI+F,EAAU3H,EAAK2S,QAAQlK,MAAK,WAC5B,IAAIqG,EAAS9O,EAAKiS,QACdjJ,EAASwR,aAAatH,QAAQpE,EAAO6L,UAAY/Y,GAUrD,OAJIoH,IACAA,EAAS8F,EAAO6J,WAAWnB,YAAYxO,IAGpCA,KAIX,OADAyD,EAAgB9E,EAAS+E,GAClB/E,EAIX,SAASuT,GAAU7Q,EAAUqC,GACzB,IAAI1M,EAAOC,KAEP0H,EAAU3H,EAAK2S,QAAQlK,MAAK,WAc5B,IAbA,IAAIqG,EAAS9O,EAAKiS,QACd0I,EAAY7L,EAAO6L,UACnBQ,EAAkBR,EAAU5W,OAC5BA,EAASyW,aAAazW,OAQtBwP,EAAkB,EAEblT,EAAI,EAAGA,EAAI0D,EAAQ1D,IAAK,CAC7B,IAAIuB,EAAM4Y,aAAa5Y,IAAIvB,GAC3B,GAA+B,IAA3BuB,EAAI6J,QAAQkP,GAAhB,CAGA,IAAIrZ,EAAQkZ,aAAatH,QAAQtR,GAYjC,GANIN,IACAA,EAAQwN,EAAO6J,WAAWnB,YAAYlW,IAG1CA,EAAQ+I,EAAS/I,EAAOM,EAAIkV,UAAUqE,GAAkB5H,UAE1C,IAAVjS,EACA,OAAOA,OAMnB,OADAmL,EAAgB9E,EAAS+E,GAClB/E,EAIX,SAASyT,GAAMtZ,EAAG4K,GACd,IAAI1M,EAAOC,KACP0H,EAAU3H,EAAK2S,QAAQlK,MAAK,WAC5B,IACIO,EADA8F,EAAS9O,EAAKiS,QAElB,IACIjJ,EAASwR,aAAa5Y,IAAIE,GAC5B,MAAOgI,GACLd,EAAS,KAQb,OAJIA,IACAA,EAASA,EAAO8N,UAAUhI,EAAO6L,UAAU5W,SAGxCiF,KAIX,OADAyD,EAAgB9E,EAAS+E,GAClB/E,EAGX,SAAS0T,GAAO3O,GACZ,IAAI1M,EAAOC,KACP0H,EAAU3H,EAAK2S,QAAQlK,MAAK,WAK5B,IAJA,IAAIqG,EAAS9O,EAAKiS,QACdlO,EAASyW,aAAazW,OACtBiQ,EAAO,GAEF3T,EAAI,EAAGA,EAAI0D,EAAQ1D,IAAK,CAC7B,IAAIib,EAAUd,aAAa5Y,IAAIvB,GACW,IAAtCib,EAAQ7P,QAAQqD,EAAO6L,YACvB3G,EAAKpN,KAAK0U,EAAQxE,UAAUhI,EAAO6L,UAAU5W,SAIrD,OAAOiQ,KAIX,OADAvH,EAAgB9E,EAAS+E,GAClB/E,EAIX,SAAS4T,GAAS7O,GACd,IAAI1M,EAAOC,KACP0H,EAAU3H,EAAKgU,OAAOvL,MAAK,SAAUuL,GACrC,OAAOA,EAAKjQ,UAIhB,OADA0I,EAAgB9E,EAAS+E,GAClB/E,EAIX,SAAS6T,GAAa5Z,EAAK8K,GACvB,IAAI1M,EAAOC,KAEX2B,EAAMiL,EAAajL,GAEnB,IAAI+F,EAAU3H,EAAK2S,QAAQlK,MAAK,WAC5B,IAAIqG,EAAS9O,EAAKiS,QAClBuI,aAAa7G,WAAW7E,EAAO6L,UAAY/Y,MAI/C,OADA6K,EAAgB9E,EAAS+E,GAClB/E,EAOX,SAAS8T,GAAU7Z,EAAKN,EAAOoL,GAC3B,IAAI1M,EAAOC,KAEX2B,EAAMiL,EAAajL,GAEnB,IAAI+F,EAAU3H,EAAK2S,QAAQlK,MAAK,gBAGd8J,IAAVjR,IACAA,EAAQ,MAIZ,IAAIiY,EAAgBjY,EAEpB,OAAO,IAAIkL,GAAU,SAAUlE,EAASD,GACpC,IAAIyG,EAAS9O,EAAKiS,QAClBnD,EAAO6J,WAAW5B,UAAUzV,GAAO,SAAUA,EAAOwI,GAChD,GAAIA,EACAzB,EAAOyB,QAEP,IACI0Q,aAAa/G,QAAQ3E,EAAO6L,UAAY/Y,EAAKN,GAC7CgH,EAAQiR,GACV,MAAOnV,GAGU,uBAAXA,EAAExD,MAA4C,+BAAXwD,EAAExD,MACrCyH,EAAOjE,GAEXiE,EAAOjE,aAQ3B,OADAqI,EAAgB9E,EAAS+E,GAClB/E,EAGX,SAAS+T,GAAehJ,EAAShG,GAI7B,GAHAA,EAAWO,EAAYvE,MAAMzI,KAAM0I,WAEnC+J,EAA6B,oBAAZA,GAA0BA,GAAW,IACjDA,EAAQ9R,KAAM,CACf,IAAIsT,EAAgBjU,KAAKkU,SACzBzB,EAAQ9R,KAAO8R,EAAQ9R,MAAQsT,EAActT,KAC7C8R,EAAQzC,UAAYyC,EAAQzC,WAAaiE,EAAcjE,UAG3D,IACItI,EADA3H,EAAOC,KAuBX,OAlBI0H,EAHC+K,EAAQ9R,KAGC,IAAI4L,GAAU,SAAUlE,GACzBoK,EAAQzC,UAGT3H,EAAQmS,GAAc/H,EAAS1S,EAAKgT,iBAFpC1K,EAAQoK,EAAQ9R,KAAO,QAI5B6H,MAAK,SAAUkS,GACd,IAAK,IAAIta,EAAIma,aAAazW,OAAS,EAAG1D,GAAK,EAAGA,IAAK,CAC/C,IAAIuB,EAAM4Y,aAAa5Y,IAAIvB,GAEI,IAA3BuB,EAAI6J,QAAQkP,IACZH,aAAa7G,WAAW/R,OAb1B4K,EAAUnE,OAAO,qBAmB/BoE,EAAgB9E,EAAS+E,GAClB/E,EAGX,IAAIgU,GAAsB,CACtB7G,QAAS,sBACTrC,aAAcsI,GACdhG,SAAUwF,KACVlH,QAAS6H,GACThI,QAAS+H,GACTxH,QAASgI,GACT9H,WAAY6H,GACZ5H,MAAOoH,GACPjX,OAAQwX,GACR3Z,IAAKwZ,GACLpH,KAAMqH,GACNpH,aAAcyH,IAGdE,GAAY,SAAmBC,EAAGC,GAClC,OAAOD,IAAMC,GAAkB,kBAAND,GAA+B,kBAANC,GAAkBC,MAAMF,IAAME,MAAMD,IAGtFE,GAAW,SAAkBC,EAAOC,GACpC,IAAIzV,EAAMwV,EAAMlY,OACZ1D,EAAI,EACR,MAAOA,EAAIoG,EAAK,CACZ,GAAImV,GAAUK,EAAM5b,GAAI6b,GACpB,OAAO,EAEX7b,IAGJ,OAAO,GAGP8b,GAAU1S,MAAM0S,SAAW,SAAUC,GACrC,MAA+C,mBAAxCrb,OAAOkB,UAAUsH,SAAS/I,KAAK4b,IAKtCC,GAAiB,GAEjBC,GAAgB,GAEhBC,GAAiB,CACjBC,UAAW3H,EACX4H,OAAQnC,GACRoC,aAAcf,IAGdgB,GAAqB,CAACJ,GAAeC,UAAU1H,QAASyH,GAAeE,OAAO3H,QAASyH,GAAeG,aAAa5H,SAEnH8H,GAAwB,CAAC,gBAEzBC,GAAiB,CAAC,QAAS,UAAW,UAAW,MAAO,OAAQ,SAAU,aAAc,WAAWC,OAAOF,IAE1GG,GAAgB,CAChBtE,YAAa,GACbuE,OAAQL,GAAmB5J,QAC3BnS,KAAM,cAGN8X,KAAM,QACNzI,UAAW,gBACXL,QAAS,GAGb,SAASqN,GAAcC,EAAqBC,GACxCD,EAAoBC,GAAiB,WACjC,IAAIC,EAAQzU,UACZ,OAAOuU,EAAoBvK,QAAQlK,MAAK,WACpC,OAAOyU,EAAoBC,GAAezU,MAAMwU,EAAqBE,OAKjF,SAASC,KACL,IAAK,IAAIhd,EAAI,EAAGA,EAAIsI,UAAU5E,OAAQ1D,IAAK,CACvC,IAAI+b,EAAMzT,UAAUtI,GAEpB,GAAI+b,EACA,IAAK,IAAIkB,KAAQlB,EACTA,EAAIla,eAAeob,KACfnB,GAAQC,EAAIkB,IACZ3U,UAAU,GAAG2U,GAAQlB,EAAIkB,GAAMvK,QAE/BpK,UAAU,GAAG2U,GAAQlB,EAAIkB,IAO7C,OAAO3U,UAAU,GAGrB,IAAI4U,GAAc,WACd,SAASA,EAAY7K,GAGjB,IAAK,IAAI8K,KAFTlT,EAAgBrK,KAAMsd,GAEIhB,GACtB,GAAIA,GAAera,eAAesb,GAAgB,CAC9C,IAAIR,EAAST,GAAeiB,GACxBC,EAAaT,EAAOlI,QACxB7U,KAAKud,GAAiBC,EAEjBpB,GAAeoB,IAIhBxd,KAAKyd,aAAaV,GAK9B/c,KAAK+S,eAAiBqK,GAAO,GAAIN,IACjC9c,KAAK0d,QAAUN,GAAO,GAAIpd,KAAK+S,eAAgBN,GAC/CzS,KAAK2d,WAAa,KAClB3d,KAAK4d,YAAc,KACnB5d,KAAK6d,QAAS,EACd7d,KAAKgS,QAAU,KAEfhS,KAAK8d,+BACL9d,KAAK+d,UAAU/d,KAAK0d,QAAQX,QAAQ,UAAS,eA0QjD,OAjQAO,EAAYtb,UAAUkS,OAAS,SAAgBzB,GAI3C,GAA0E,YAAlD,qBAAZA,EAA0B,YAActI,EAAQsI,IAAwB,CAGhF,GAAIzS,KAAK6d,OACL,OAAO,IAAItb,MAAM,wDAGrB,IAAK,IAAInC,KAAKqS,EAAS,CAKnB,GAJU,cAANrS,IACAqS,EAAQrS,GAAKqS,EAAQrS,GAAGkD,QAAQ,MAAO,MAGjC,YAANlD,GAAyC,kBAAfqS,EAAQrS,GAClC,OAAO,IAAImC,MAAM,sCAGrBvC,KAAK0d,QAAQtd,GAAKqS,EAAQrS,GAK9B,QAAI,WAAYqS,KAAWA,EAAQsK,QACxB/c,KAAK+d,UAAU/d,KAAK0d,QAAQX,QAIpC,MAAuB,kBAAZtK,EACPzS,KAAK0d,QAAQjL,GAEbzS,KAAK0d,SAQpBJ,EAAYtb,UAAUyb,aAAe,SAAsBO,EAAcvR,EAAUE,GAC/E,IAAIjF,EAAU,IAAI6E,GAAU,SAAUlE,EAASD,GAC3C,IACI,IAAIoV,EAAaQ,EAAanJ,QAC1BoJ,EAAkB,IAAI1b,MAAM,wFAIhC,IAAKyb,EAAanJ,QAEd,YADAzM,EAAO6V,GAKX,IADA,IAAIC,EAAgBtB,GAAeC,OAAO,gBACjCzc,EAAI,EAAGoG,EAAM0X,EAAcpa,OAAQ1D,EAAIoG,EAAKpG,IAAK,CACtD,IAAI+d,EAAmBD,EAAc9d,GAIjCge,GAAcrC,GAASY,GAAuBwB,GAClD,IAAKC,GAAcJ,EAAaG,KAAgE,oBAAnCH,EAAaG,GAEtE,YADA/V,EAAO6V,GAKf,IAAII,EAA0B,WAU1B,IATA,IAAIC,EAA8B,SAAqCC,GACnE,OAAO,WACH,IAAI1U,EAAQ,IAAItH,MAAM,UAAYgc,EAAa,6CAC3C7W,EAAU6E,EAAUnE,OAAOyB,GAE/B,OADA2C,EAAgB9E,EAASgB,UAAUA,UAAU5E,OAAS,IAC/C4D,IAIN8W,EAAK,EAAGC,EAAO9B,GAAsB7Y,OAAQ0a,EAAKC,EAAMD,IAAM,CACnE,IAAIE,EAAuB/B,GAAsB6B,GAC5CR,EAAaU,KACdV,EAAaU,GAAwBJ,EAA4BI,MAK7EL,IAEA,IAAIM,EAAmB,SAA0BC,GACzCxC,GAAeoB,IACf3Q,QAAQgS,KAAK,kCAAoCrB,GAErDpB,GAAeoB,GAAcQ,EAC7B3B,GAAcmB,GAAcoB,EAI5BvW,KAGA,aAAc2V,EACVA,EAAalJ,UAA6C,oBAA1BkJ,EAAalJ,SAC7CkJ,EAAalJ,WAAWtM,KAAKmW,EAAkBvW,GAE/CuW,IAAmBX,EAAalJ,UAGpC6J,GAAiB,GAEvB,MAAOxa,GACLiE,EAAOjE,OAKf,OADAuI,EAAoBhF,EAAS+E,EAAUE,GAChCjF,GAGX4V,EAAYtb,UAAU+a,OAAS,WAC3B,OAAO/c,KAAK6U,SAAW,MAG3ByI,EAAYtb,UAAU8c,UAAY,SAAmBtB,EAAY/Q,EAAUE,GACvE,IAAIoS,EAAmB3C,GAAeoB,GAAcjR,EAAUlE,QAAQ+T,GAAeoB,IAAejR,EAAUnE,OAAO,IAAI7F,MAAM,sBAG/H,OADAmK,EAAoBqS,EAAkBtS,EAAUE,GACzCoS,GAGXzB,EAAYtb,UAAUgd,cAAgB,SAAuBvS,GACzD,IAAIwS,EAAoB1S,EAAUlE,QAAQ8P,IAE1C,OADAzL,EAAoBuS,EAAmBxS,GAChCwS,GAGX3B,EAAYtb,UAAU0Q,MAAQ,SAAejG,GACzC,IAAI1M,EAAOC,KAEP0H,EAAU3H,EAAK4d,WAAWnV,MAAK,WAK/B,OAJoB,OAAhBzI,EAAK8d,SACL9d,EAAK8d,OAAS9d,EAAK6d,eAGhB7d,EAAK8d,UAIhB,OADAnR,EAAoBhF,EAAS+E,EAAUA,GAChC/E,GAGX4V,EAAYtb,UAAU+b,UAAY,SAAmBmB,EAASzS,EAAUE,GACpE,IAAI5M,EAAOC,KAENkc,GAAQgD,KACTA,EAAU,CAACA,IAGf,IAAIC,EAAmBnf,KAAKof,qBAAqBF,GAEjD,SAASG,IACLtf,EAAK2d,QAAQX,OAAShd,EAAKgd,SAG/B,SAASuC,EAAqBvC,GAK1B,OAJAhd,EAAKwf,QAAQxC,GACbsC,IAEAtf,EAAK8d,OAAS9d,EAAKyS,aAAazS,EAAK2d,SAC9B3d,EAAK8d,OAGhB,SAAS2B,EAAWL,GAChB,OAAO,WACH,IAAIM,EAAqB,EAEzB,SAASC,IACL,MAAOD,EAAqBN,EAAiBrb,OAAQ,CACjD,IAAI0Z,EAAa2B,EAAiBM,GAMlC,OALAA,IAEA1f,EAAKiS,QAAU,KACfjS,EAAK8d,OAAS,KAEP9d,EAAK+e,UAAUtB,GAAYhV,KAAK8W,GAAsB,SAASI,GAG1EL,IACA,IAAIxV,EAAQ,IAAItH,MAAM,sCAEtB,OADAxC,EAAK4d,WAAapR,EAAUnE,OAAOyB,GAC5B9J,EAAK4d,WAGhB,OAAO+B,KAOf,IAAIC,EAAuC,OAApB3f,KAAK2d,WAAsB3d,KAAK2d,WAAW,UAAS,WACvE,OAAOpR,EAAUlE,aAChBkE,EAAUlE,UAqBf,OAnBArI,KAAK2d,WAAagC,EAAiBnX,MAAK,WACpC,IAAIgV,EAAa2B,EAAiB,GAIlC,OAHApf,EAAKiS,QAAU,KACfjS,EAAK8d,OAAS,KAEP9d,EAAK+e,UAAUtB,GAAYhV,MAAK,SAAUuU,GAC7Chd,EAAK8U,QAAUkI,EAAOlI,QACtBwK,IACAtf,EAAK+d,+BACL/d,EAAK6d,YAAc4B,EAAWL,SAEnC,UAAS,WACRE,IACA,IAAIxV,EAAQ,IAAItH,MAAM,sCAEtB,OADAxC,EAAK4d,WAAapR,EAAUnE,OAAOyB,GAC5B9J,EAAK4d,cAGhBjR,EAAoB1M,KAAK2d,WAAYlR,EAAUE,GACxC3M,KAAK2d,YAGhBL,EAAYtb,UAAU4d,SAAW,SAAkBpC,GAC/C,QAASnB,GAAcmB,IAG3BF,EAAYtb,UAAUud,QAAU,SAAiBM,GAC7CzC,GAAOpd,KAAM6f,IAGjBvC,EAAYtb,UAAUod,qBAAuB,SAA8BF,GAEvE,IADA,IAAIC,EAAmB,GACd/e,EAAI,EAAGoG,EAAM0Y,EAAQpb,OAAQ1D,EAAIoG,EAAKpG,IAAK,CAChD,IAAIod,EAAa0B,EAAQ9e,GACrBJ,KAAK4f,SAASpC,IACd2B,EAAiBxY,KAAK6W,GAG9B,OAAO2B,GAGX7B,EAAYtb,UAAU8b,6BAA+B,WAKjD,IAAK,IAAI1d,EAAI,EAAGoG,EAAMoW,GAAe9Y,OAAQ1D,EAAIoG,EAAKpG,IAClD4c,GAAchd,KAAM4c,GAAexc,KAI3Ckd,EAAYtb,UAAU8d,eAAiB,SAAwBrN,GAC3D,OAAO,IAAI6K,EAAY7K,IAGpB6K,EArSO,GA4SdyC,GAAiB,IAAIzC,GAEzB1d,EAAOD,QAAUogB,IAEf,CAAC,EAAI,KAAK,GAAG,CAAC,GAruFmW,CAquF/V,Q,yCC3uFpB,IAAIC,EAGJA,EAAI,WACH,OAAOhgB,KADJ,GAIJ,IAECggB,EAAIA,GAAK,IAAIC,SAAS,cAAb,GACR,MAAO9b,GAEc,kBAAXyC,SAAqBoZ,EAAIpZ,QAOrChH,EAAOD,QAAUqgB,G,kCCjBjB,G,OAAsB,qBAAXpZ,OAAwB,CACjC,IAAItE,EAAgBsE,OAAOvE,SAASC,cAE9BF,EAAmB,EAAQ,QAC/BE,EAAgBF,IAGV,kBAAmBC,UACvBvB,OAAOC,eAAesB,SAAU,gBAAiB,CAAEpB,IAAKmB,IAI5D,IAAI4B,EAAM1B,GAAiBA,EAAc0B,IAAIwK,MAAM,2BAC/CxK,IACF,IAA0BA,EAAI,IAKnB,I,qBCyGTkc,EAA4B,CAC9BC,QAD8B,SACrBC,GACLA,EAAIpe,UAAUqe,KAAO,IACrBvf,OAAOC,eAAeqf,EAAK,OAAQ,CAC/Bnf,IAD+B,WAE3B,OAAO,SAMR,ICvIA","file":"vlf.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vlf\"] = factory();\n\telse\n\t\troot[\"vlf\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"fb15\");\n","// addapted from the document.currentScript polyfill by Adam Miller\n// MIT license\n// source: https://github.com/amiller-gh/currentScript-polyfill\n\n// added support for Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1620505\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory();\n  } else {\n    root.getCurrentScript = factory();\n  }\n}(typeof self !== 'undefined' ? self : this, function () {\n  function getCurrentScript () {\n    if (document.currentScript) {\n      return document.currentScript\n    }\n  \n    // IE 8-10 support script readyState\n    // IE 11+ & Firefox support stack trace\n    try {\n      throw new Error();\n    }\n    catch (err) {\n      // Find the second match for the \"at\" string to get file src url from stack.\n      var ieStackRegExp = /.*at [^(]*\\((.*):(.+):(.+)\\)$/ig,\n        ffStackRegExp = /@([^@]*):(\\d+):(\\d+)\\s*$/ig,\n        stackDetails = ieStackRegExp.exec(err.stack) || ffStackRegExp.exec(err.stack),\n        scriptLocation = (stackDetails && stackDetails[1]) || false,\n        line = (stackDetails && stackDetails[2]) || false,\n        currentLocation = document.location.href.replace(document.location.hash, ''),\n        pageSource,\n        inlineScriptSourceRegExp,\n        inlineScriptSource,\n        scripts = document.getElementsByTagName('script'); // Live NodeList collection\n  \n      if (scriptLocation === currentLocation) {\n        pageSource = document.documentElement.outerHTML;\n        inlineScriptSourceRegExp = new RegExp('(?:[^\\\\n]+?\\\\n){0,' + (line - 2) + '}[^<]*<script>([\\\\d\\\\D]*?)<\\\\/script>[\\\\d\\\\D]*', 'i');\n        inlineScriptSource = pageSource.replace(inlineScriptSourceRegExp, '$1').trim();\n      }\n  \n      for (var i = 0; i < scripts.length; i++) {\n        // If ready state is interactive, return the script tag\n        if (scripts[i].readyState === 'interactive') {\n          return scripts[i];\n        }\n  \n        // If src matches, return the script tag\n        if (scripts[i].src === scriptLocation) {\n          return scripts[i];\n        }\n  \n        // If inline source matches, return the script tag\n        if (\n          scriptLocation === currentLocation &&\n          scripts[i].innerHTML &&\n          scripts[i].innerHTML.trim() === inlineScriptSource\n        ) {\n          return scripts[i];\n        }\n      }\n  \n      // If no match, return null\n      return null;\n    }\n  };\n\n  return getCurrentScript\n}));\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.7.3\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support (#5572)\n        // since Safari 10.1 shipped with fetch, we can use that to detect it\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback retuns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var currentScript = window.document.currentScript\n  if (process.env.NEED_CURRENTSCRIPT_POLYFILL) {\n    var getCurrentScript = require('@soda/get-current-script')\n    currentScript = getCurrentScript()\n\n    // for backward compatibility, because previously we directly included the polyfill\n    if (!('currentScript' in document)) {\n      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })\n    }\n  }\n\n  var src = currentScript && currentScript.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/)\n  if (src) {\n    __webpack_public_path__ = src[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","import Vue, { VueConstructor } from 'vue'\nimport localForage from 'localforage'\n\ninterface LocalForageDbInstanceOptions {\n    name?: string;\n\n    storeName?: string;\n}\n\ninterface LocalForageOptions extends LocalForageDbInstanceOptions {\n    driver?: string | string[];\n\n    size?: number;\n\n    version?: number;\n\n    description?: string;\n}\n\ninterface LocalForageDbMethodsCore {\n    getItem<T>(key: string, callback?: (err: any, value: T) => void): Promise<T>;\n\n    setItem<T>(key: string, value: T, callback?: (err: any, value: T) => void): Promise<T>;\n\n    removeItem(key: string, callback?: (err: any) => void): Promise<void>;\n\n    clear(callback?: (err: any) => void): Promise<void>;\n\n    length(callback?: (err: any, numberOfKeys: number) => void): Promise<number>;\n\n    key(keyIndex: number, callback?: (err: any, key: string) => void): Promise<string>;\n\n    keys(callback?: (err: any, keys: string[]) => void): Promise<string[]>;\n\n    iterate<T, U>(iteratee: (value: T, key: string, iterationNumber: number) => U,\n        callback?: (err: any, result: U) => void): Promise<U>;\n}\n\ninterface LocalForageDropInstanceFn {\n    (dbInstanceOptions?: LocalForageDbInstanceOptions, callback?: (err: any) => void): Promise<void>;\n}\n\ninterface LocalForageDriverMethodsOptional {\n    dropInstance?: LocalForageDropInstanceFn;\n}\n\n// duplicating LocalForageDriverMethodsOptional to preserve TS v2.0 support,\n// since Partial<> isn't supported there\ninterface LocalForageDbMethodsOptional {\n    dropInstance: LocalForageDropInstanceFn;\n}\n\ninterface LocalForageDriverDbMethods extends LocalForageDbMethodsCore, LocalForageDriverMethodsOptional { }\n\ninterface LocalForageDriverSupportFunc {\n    (): Promise<boolean>;\n}\n\ninterface LocalForageDriver extends LocalForageDriverDbMethods {\n    _driver: string;\n\n    _initStorage(options: LocalForageOptions): void;\n\n    _support?: boolean | LocalForageDriverSupportFunc;\n}\n\ninterface LocalForageSerializer {\n    serialize<T>(value: T | ArrayBuffer | Blob, callback: (value: string, error: any) => void): void;\n\n    deserialize<T>(value: string): T | ArrayBuffer | Blob;\n\n    stringToBuffer(serializedString: string): ArrayBuffer;\n\n    bufferToString(buffer: ArrayBuffer): string;\n}\n\ninterface LocalForageDbMethods extends LocalForageDbMethodsCore, LocalForageDbMethodsOptional { }\n\ninterface LocalForage extends LocalForageDbMethods {\n    LOCALSTORAGE: string;\n    WEBSQL: string;\n    INDEXEDDB: string;\n\n    /**\n     * Set and persist localForage options. This must be called before any other calls to localForage are made, but can be called after localForage is loaded.\n     * If you set any config values with this method they will persist after driver changes, so you can call config() then setDriver()\n     * @param {LocalForageOptions} options?\n     */\n    config(options: LocalForageOptions): boolean;\n    config(options: string): any;\n    config(): LocalForageOptions;\n\n    /**\n     * Create a new instance of localForage to point to a different store.\n     * All the configuration options used by config are supported.\n     * @param {LocalForageOptions} options\n     */\n    createInstance(options: LocalForageOptions): LocalForage;\n\n    driver(): string;\n\n    /**\n     * Force usage of a particular driver or drivers, if available.\n     * @param {string} driver\n     */\n    setDriver(driver: string | string[], callback?: () => void, errorCallback?: (error: any) => void): Promise<void>;\n\n    defineDriver(driver: LocalForageDriver, callback?: () => void, errorCallback?: (error: any) => void): Promise<void>;\n\n    /**\n     * Return a particular driver\n     * @param {string} driver\n     */\n    getDriver(driver: string): Promise<LocalForageDriver>;\n\n    getSerializer(callback?: (serializer: LocalForageSerializer) => void): Promise<LocalForageSerializer>;\n\n    supports(driverName: string): boolean;\n\n    ready(callback?: (error: any) => void): Promise<void>;\n}\n\nexport type VueLocalForagePlugin = {\n    install(vue: VueConstructor<Vue>, options?: object | null): void;\n}\n\nconst vlf: VueLocalForagePlugin = {\n    install (vue) {\n        vue.prototype.$vlf = localForage as LocalForage\n        Object.defineProperty(vue, '$vlf', {\n            get() {\n                return localForage as LocalForage\n            }\n        })\n    }\n}\n\nexport default vlf\nexport { LocalForage }","import './setPublicPath'\nimport mod from '~entry'\nexport default mod\nexport * from '~entry'\n"],"sourceRoot":""}